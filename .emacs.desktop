;; -*- mode: emacs-lisp; coding: emacs-mule; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Tue May  8 16:03:25 2018
;; Desktop file format version 208
;; Emacs version 25.3.1

;; Global section:
(setq desktop-saved-frameset [frameset 1 (23281 19389 832746 0) (desktop . "208") "freedom@freedoms-MacBook-Air.local" nil nil ((((tty-type . "xterm-256color") (tty . "/dev/tty") (display-type . color) (background-mode . dark) (foreground-color . "gray80") (cursor-color . "green") (tool-bar-lines . 0) (menu-bar-lines . 0) (powerline-cache) (background-color . "#181a26") (font . "tty") (height . 48) (width . 203) (modeline . t) (unsplittable) (frameset--id . "3869-E4CF-0750-7A5F") (frameset--mini t) (minibuffer . t)) ((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 5) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 4) (min-pixel-width . 10) (min-pixel-height-ignore . 3) (min-pixel-width-ignore . 5) (min-pixel-height-safe . 1) (min-pixel-width-safe . 2)) leaf (pixel-width . 203) (pixel-height . 47) (total-width . 203) (total-height . 47) (normal-height . 1.0) (normal-width . 1.0) (buffer "init.el" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins 3) (scroll-bars nil 0 t nil 0 nil) (vscroll . 0) (dedicated) (point . 3118) (start . 2473))))])
(setq desktop-missing-file-warning nil)
(setq tags-file-name nil)
(setq tags-table-list nil)
(setq search-ring '("unset" "C-z" "C" "cin" "bash" "cpp" "meiro" "mp" "section" "meiro" "q" "que" "shell" "s" "swap" "some"))
(setq regexp-search-ring nil)
(setq register-alist nil)
(setq file-name-history '("~/.emacs.d/init.el" "~/coder/typical/001_A.cpp" "~/.bashrc" "~/MyPrograms/input.txt" "~/WOJ/kadai13forSubm.cpp" "~/WOJ/kadai13forSubm2.cpp" "~/WOJ/kadai13forSubm2" "~/coder/Minesweeper2.cpp" "~/coder/Minesweeper3.cpp" "~/coder/Minesweeper4.cpp" "~/coder/20180407/A.cpp" "~/WOJ/kadai13.cpp" "~/coder/TwoColorsCardGame2.cpp~" "~/coder/hinamatsuri.cpp" "~/coder/LucasNumber.cpp" "~/.emacs.d/mysnippets/c++-mode/prtf.cpp" "~/coder/SomeSums.cpp"))
(setq kill-ring '("\n;;\n(require 'auto-install)\n\n;;(require 'elscreen)\n;;(elscreen-set-prefix-key \"\\C-t\")\n;;(elscreen-start)\n\n;; use-package\n(require 'use-package)\n\n;; powerline\n(use-package powerline\n  :config\n  (powerline-default-theme))\n;;company mode\n(require 'company)\n(global-company-mode) ; ’Á´’¥Ð’¥Ã’¥Õ’¥¡’¤Ç’Í­’¸ú’¤Ë’¤¹’¤ë\n;;(setq company-idle-delay 0) ; ’¥Ç’¥Õ’¥©’¥ë’¥È’¤Ï0.5\n(setq company-minimum-prefix-length 2) ; ’¥Ç’¥Õ’¥©’¥ë’¥È’¤Ï4\n(setq company-selection-wrap-around t) ; ’¸õ’Êä’¤Î’°ì’ÈÖ’²¼’¤Ç’¤µ’¤é’¤Ë’²¼’¤Ë’¹Ô’¤³’¤¦’¤È’¤¹’¤ë’¤È’°ì’ÈÖ’¾å’¤Ë’Ìá’¤ë\n\n;;’Êä’´°’µ¡’Ç½’¤Î’Àß’Äê\n(require 'irony)\n(add-hook 'c-mode-hook 'irony-mode)\n(add-hook 'c++-mode-hook 'irony-mode)\n(add-hook 'objc-mode-hook 'irony-mode)\n(add-hook 'irony-mode-hook 'irony-cdb-autosetup-compile-options)\n(add-to-list 'company-backends 'company-irony) ;;backend’ÄÉ’²Ã\n\n(eval-after-load \"irony\"\n  '(progn\n     (custom-set-variables '(irony-additional-clang-options '(\"-std=c++11\")))\n     (add-to-list 'company-backends 'company-irony)\n     (add-hook 'irony-mode-hook 'irony-cdb-autosetup-compile-options)\n     (add-hook 'c-mode-common-hook 'irony-mode)))\n\n\n;; ’½é’´ü’²è’ÌÌ’¤ò’É½’¼¨’¤·’¤Ê’¤¤\n(setq inhibit-startup-message t)\n\n;;’¥¿’¥Ö’¤Î’Àß’Äê\n;;(require 'tabbar)\n;;(tabbar-mode)\n\n;; Firefox’¥é’¥¤’¥¯’¤Ê’¥­’¡¼’¥Ð’¥¤’¥ó’¥É’¤Ë\n;;(global-set-key [(control tab)]       'tabbar-forward)\n;;(global-set-key [(control shift tab)] 'tabbar-backward)\n;; -nw ’¤Ç’¤Ï’¸ú’¤«’¤Ê’¤¤’¤Î’¤Ç’ÊÌ’¤Î’¥­’¡¼’¥Ð’¥¤’¥ó’¥É’¤ò’³ä’¤ê’Åö’¤Æ’¤ë\n;;(global-set-key (kbd \"C-x n\") 'tabbar-forward)\n;;(global-set-key (kbd \"C-x p\") 'tabbar-backward)\n\n;; ’¥¿’¥Ö’¾å’¤Ç’¥Þ’¥¦’¥¹’¥Û’¥¤’¡¼’¥ë’¤ò’»È’¤¦’¤³’¤È’¤Ë’¤·’¤è\n;;(tabbar-mwheel-mode 1)\n;; ’¥°’¥ë’¡¼’¥×’¤ò’»È’¤ï’¤Ê’¤¤\n;;(setq tabbar-buffer-groups-function nil)\n;; ’º¸’Â¦’¤Î’¥Ü’¥¿’¥ó’¤ò’¾Ã’¤¹\n;(dolist (btn '(tabbar-buffer-home-button\n;              tabbar-scroll-left-button\n;               tabbar-scroll-right-button))\n;  (set btn (cons (cons \"\" nil)\n;                 (cons \"\" nil))))\n;; ’¿§’Àß’Äê\n;;(set-face-attribute ; ’¥Ð’¡¼’¼«’ÂÎ’¤Î’¿§\n;;  'tabbar-default nil\n;;   :background \"gray90\"\n;;   :family \"Inconsolata\"\n;;   :height 1.0)\n;;(set-face-attribute ; ’¥¢’¥¯’¥Æ’¥£’¥Ö’¤Ê’¥¿’¥Ö\n;;  'tabbar-selected nil\n;;   :background \"brown40\"\n;;   :foreground \"white\"                  ;\n;;   :weight 'bold\n;;   :box nil)\n;;(set-face-attribute ; ’Èó’¥¢’¥¯’¥Æ’¥£’¥Ö’¤Ê’¥¿’¥Ö\n;;  'tabbar-unselected nil\n;;   :background \"gray90\"\n;;   :foreground \"black\"\n;;   :box nil)\n\n\n;; ’Éý’Àß’Äê\n;;  (set-face-attribute\n;;   'tabbar-separator nil\n;;   :height 0.7)\n;;\n;; tabbar’¤Î’Àß’Äê\n;;\n(require 'tabbar)\n(tabbar-mode)\n\n(tabbar-mwheel-mode nil)                  ;; ’¥Þ’¥¦’¥¹’¥Û’¥¤’¡¼’¥ë’Ìµ’¸ú\n(setq tabbar-buffer-groups-function nil)  ;; ’¥°’¥ë’¡¼’¥×’Ìµ’¸ú\n(setq tabbar-use-images nil)              ;; ’²è’Áü’¤ò’»È’¤ï’¤Ê’¤¤\n\n\n;;----- ’¥­’¡¼’¤Ë’³ä’¤ê’Åö’¤Æ’¤ë\n(global-set-key (kbd \"<C-tab>\") 'tabbar-forward-tab)\n(global-set-key (kbd \"<C-S-tab>\") 'tabbar-backward-tab)\n;;(global-set-key (kbd \"<f8>\") 'tabbar-forward-tab)\n;;(global-set-key (kbd \"<f7>\") 'tabbar-backward-tab)\n;;(global-unset-key (kbd \"C-z\"))\n(global-set-key (kbd \"C-z C-n\") 'tabbar-forward-tab)\n(global-set-key (kbd \"C-z C-p\") 'tabbar-backward-tab)\n\n\n;;----- ’º¸’Â¦’¤Î’¥Ü’¥¿’¥ó’¤ò’¾Ã’¤¹\n(dolist (btn '(tabbar-buffer-home-button\n               tabbar-scroll-left-button\n               tabbar-scroll-right-button))\n  (set btn (cons (cons \"\" nil)\n                 (cons \"\" nil))))\n\n\n;;----- ’¥¿’¥Ö’¤Î’¥»’¥Ñ’¥ì’¡¼’¥¿’¡¼’¤Î’Ä¹’¤µ\n(setq tabbar-separator '(2.0))\n\n\n;;----- ’¥¿’¥Ö’¤Î’¿§’¡ÊCUI’¤Î’»þ’¡£GUI’¤Î’»þ’¤Ï’¸å’¤Ç’¥«’¥é’¡¼’¥Æ’¡¼’¥Þ’¤¬’Å¬’ÍÑ’¡Ë\n(set-face-attribute\n 'tabbar-default nil\n :background \"blue\"\n :foreground \"white\"\n )\n(set-face-attribute\n 'tabbar-selected nil\n :background \"#ff5f00\"\n :foreground \"brightwhite\"\n :box nil\n )\n;(set-face-attribute\n; 'tabbar-modified nil\n;:background \"brightred\"\n;:foreground \"brightwhite\"\n;:box nil\n;)\n\n(when window-system                       ; GUI’»þ\n  ;; ’³°’´Ñ’ÊÑ’¹¹\n  (set-face-attribute\n   'tabbar-default nil\n   :family \"MeiryoKe_Gothic\"\n   :background \"#34495E\"\n   :foreground \"#EEEEEE\"\n   :height 0.85\n   )\n  (set-face-attribute\n   'tabbar-unselected nil\n   :background \"#34495E\"\n   :foreground \"#EEEEEE\"\n   :box nil\n  )\n;  (set-face-attribute\n;   'tabbar-modified nil\n;   :background \"#E67E22\"\n;   :foreground \"#EEEEEE\"\n;   :box nil\n;  )\n  (set-face-attribute\n   'tabbar-selected nil\n   :background \"#E74C3C\"\n   :foreground \"#EEEEEE\"\n   :box nil)\n  (set-face-attribute\n   'tabbar-button nil\n   :box nil)\n  (set-face-attribute\n   'tabbar-separator nil\n   :height 2.0)\n)\n\n;;----- ’É½’¼¨’¤¹’¤ë’¥Ð’¥Ã’¥Õ’¥¡\n(defun my-tabbar-buffer-list ()\n  (delq nil\n        (mapcar #'(lambda (b)\n                    (cond\n                     ;; Always include the current buffer.\n                     ((eq (current-buffer) b) b)\n                     ((buffer-file-name b) b)\n                     ((char-equal ?\\  (aref (buffer-name b) 0)) nil)\n                     ((equal \"*scratch*\" (buffer-name b)) b) ; *scratch*’¥Ð’¥Ã’¥Õ’¥¡’¤Ï’É½’¼¨’¤¹’¤ë\n                     ((char-equal ?* (aref (buffer-name b) 0)) nil) ; ’¤½’¤ì’°Ê’³°’¤Î * ’¤Ç’»Ï’¤Þ’¤ë’¥Ð’¥Ã’¥Õ’¥¡’¤Ï’É½’¼¨’¤·’¤Ê’¤¤\n                     ((buffer-live-p b) b)))\n                (buffer-list))))\n(setq tabbar-buffer-list-function 'my-tabbar-buffer-list)\n\n\n;;; helm\n;;(package-install 'helm)\n(require 'helm-config)\n(helm-mode 1)\n;;(helm-migemo-mode 1)\n\n;; C-h’¤Ç’Á°’¤Î’Ê¸’»ú’ºï’½ü\n(define-key helm-map (kbd \"C-h\") 'delete-backward-char)\n(define-key helm-find-files-map (kbd \"C-h\") 'delete-backward-char)\n\n(define-key helm-map (kbd \"<tab>\") 'helm-execute-persistent-action) ; rebind tab to run persistent action\n(define-key helm-map (kbd \"C-i\") 'helm-execute-persistent-action) ; make TAB work in terminal\n(define-key helm-map (kbd \"C-z\")  'helm-select-action) ; list actions using C-z\n\n;;(define-key helm-find-files-map (kbd \"TAB\") 'helm-execute-persistent-action)\n;;(define-key helm-read-file-map (kbd \"TAB\") 'helm-execute-persistent-action)\n\n\n;; ’¥­’¡¼’¥Ð’¥¤’¥ó’¥É\n(global-set-key (kbd \"C-o\") 'helm-mini)\n(global-set-key (kbd \"C-c a\") 'helm-do-ag)\n(global-set-key (kbd \"C-c h\") 'helm-mini)\n(define-key global-map (kbd \"C-x b\")   'helm-buffers-list)\n;;(define-key global-map (kbd \"C-x b\") 'helm-for-files)\n(define-key global-map (kbd \"C-x C-f\") 'helm-find-files)\n(define-key global-map (kbd \"M-x\")     'helm-M-x)\n(define-key global-map (kbd \"M-y\")     'helm-show-kill-ring)\n\n(add-to-list 'helm-completing-read-handlers-alist '(write-file . nil))\n\n;; ’¥¿’¥¤’¥È’¥ë’¥Ñ’¡¼’¤Ë’¥Õ’¥¡’¥¤’¥ë’¤Î’¥Õ’¥ë’¥Ñ’¥¹’¤ò’É½’¼¨’¤¹’¤ë\n(setq frame-title-format \"%f\")\n\n;;’¥­’¡¼’¥Ð’¥¤’¥ó’¥É\n(define-key global-map [?ŠÜ] [?\\\\])     ;;\n(define-key global-map (kbd \"C-,\") 'beginning-of-buffer)     ;;\n(define-key global-map (kbd \"C-.\") 'end-of-buffer)\n(define-key global-map (kbd \"C-x C-/\") 'eval-buffer)\n\n;; ’¹Ô’¿ô’¤ò’É½’¼¨’¤¹’¤ë\n(global-linum-mode t)\n\n\n;; ’²þ’¹Ô’¥³’¡¼’¥É’¤ò’É½’¼¨’¤¹’¤ë\n;;(setq eol-mnemonic-dos \"(CRLF)\")\n;;(setq eol-mnemonic-mac \"(CR)\")\n;;(setq eol-mnemonic-unix \"(LF)\")\n\n;;’ÆÃ’¼ì’Ê¸’»ú’¤Ë’´Ø’¤¹’¤ë’É½’¼¨’Àß’Äê\n(require 'whitespace)\n;; ’¥¹’¥Ú’¡¼’¥¹’¤Î’Äê’µÁ’¤Ï’Á´’³Ñ’¥¹’¥Ú’¡¼’¥¹’¤È’¤¹’¤ë’¡£\n(setq whitespace-trailing-regexp  \"\\\\([ \\u00A0]+\\\\)$\")\n(setq whitespace-space-regexp \"\\\\(\\u3000+\\\\)\")\n(defvar my/bg-color \"#232323\")\n\n;;whitespace-space-regexp\n\n\n;;’¶ñ’ÂÎ’Åª’¤Ê’Àß’Äê\n(set-face-foreground 'whitespace-space \"white40\")\n(set-face-bold-p 'whitespace-space t)\n(set-face-underline  'whitespace-space t)\n(set-face-foreground 'whitespace-newline  \"gray28\")        ;;’²þ’¹Ô’Ê¸’»ú’¤Î’¿§\n;;(set-face-background 'whitespace-newline \"gray28\")\n\n;;’ÆÃ’¼ì’Ê¸’»ú’¤ò’É½’¼¨’¤µ’¤»’¤ë\n(global-whitespace-mode 1)\n\n\n;; M-ESC ESC ’¤Ë’¤è’¤ë ’¥¦’¥£’¥ó’¥É’¥¦’¤Î’Ã±’°ì’²½’¤ò’Ìµ’¸ú’²½\n(define-key global-map (kbd \"M-ESC ESC\") nil)\n\n\n;; ’Îó’¿ô’¤ò’É½’¼¨’¤¹’¤ë\n(column-number-mode t)\n\n;; ’ÂÐ’±þ’¤¹’¤ë’³ç’¸Ì’¤ò’¸÷’¤é’¤»’¤ë\n(show-paren-mode t)\n(put 'upcase-region 'disabled nil)\n\n(setq auto-mode-alist\n(cons '(\"\\\\.ml[iylp]?$\" . caml-mode) auto-mode-alist))\n(autoload 'caml-mode \"caml\" \"Major mode for editing Caml code.\" t)\n(autoload 'run-caml \"inf-caml\" \"Run an inferior Caml process.\" t)\n;;(if window-system (require 'caml-font))\n;;(setq inferior-caml-program \"/usr/local/bin/ocaml\")\n\n\n'(load \"'\"$HOME\"'/.opam/system/share/emacs/site-lisp/tuareg-site-file\")'\n(add-to-list 'auto-mode-plist '(\"\\\\.ml[iylp]?$\" . tuareg-mode))\n(autoload 'tuareg-mode \"tuareg\" \"Major mode for editing OCaml code.\" t)\n(autoload 'tuareg-run-ocaml \"tuareg\" \"Run an inferior OCaml process.\" t)\n(autoload 'ocamldebug \"ocamldebug\" \"Run the OCaml debugger.\" t)\n\n\n\n;;(set-face-background 'default \"#303030\")\n;;(set-foreground-color \"#ffffff\")\n(load-theme 'deeper-blue t)\n\n\n\n;; run yatex mode when open .tex file\n(setq auto-mode-alist\n(cons (cons \"\\\\.tex$\" 'yatex-mode) auto-mode-alist))\n(autoload 'yatex-mode \"yatex\" \"Yet Another LaTeX mode\" t)\n\n(setq dviprint-command-format \"dvipdfmx %s\")\n\n;; yatex load path\n(setq load-path (cons (expand-file-name\n\"/Applications/Emacs.app/Contents/Resources/site-lisp/yatex\")\nload-path))\n;; use utf-8 on yatex mode\n(setq YaTeX-kanji-code 4)\n\n;; preview\n(setq dvi2-command \"open -a Preview\") \n(defvar YaTeX-dvi2-command-ext-alist\n  '((\"xdvi\" . \".dvi\")\n    (\"ghostview\\\\|gv\" . \".ps\")\n    (\"acroread\\\\|pdf\\\\|Preview\\\\|open\" . \".pdf\")))\n\n;;yatex’¤Ë’¥¢’¥¦’¥È’¥é’¥¤’¥ó’µ¡’Ç½’¤ò’ÄÉ’²Ã\n(defun latex-outline-level ()\n  (interactive)\n  (let ((str nil))\n	(looking-at outline-regexp)\n	(setq str (buffer-substring-no-properties (match-beginning 0) (match-end 0)))\n	(cond ;; ’¥­’¡¼’¥ï’¡¼’¥É ’¤Ë ’³¬’ÁØ ’¤ò’ÊÖ’¤¹\n	 ((string-match \"documentclass\" str) 1)\n	 ((string-match \"documentstyle\" str) 1)\n	 ((string-match \"part\" str) 2)\n	 ((string-match \"chapter\" str) 3)\n	 ((string-match \"appendix\" str) 3)\n	 ((string-match \"subsubsection\" str) 6)\n	 ((string-match \"subsection\" str) 5)\n	 ((string-match \"section\" str) 4)\n	 (t (+ 6 (length str)))\n	 )))\n\n(add-hook 'yatex-mode-hook\n		  '(lambda ()\n			 (setq outline-level 'latex-outline-level)\n			 (make-local-variable 'outline-regexp)\n			 (setq outline-regexp\n				  (concat \"[ \\t]*\\\\\\\\\\\\(documentstyle\\\\|documentclass\\\\|\"\n				          \"part\\\\|chapter\\\\|appendix\\\\|section\\\\|subsection\\\\|subsubsection\\\\)\"\n				          \"\\\\*?[ \\t]*[[{]\"))\n			 (outline-minor-mode t)))\n\n\n(require 'multi-eshell)\n\n(require 'undo-tree)\n(global-undo-tree-mode)\n\n\n\n;; (require 'yasnippet)\n;; (yas-global-mode)\n;; (eval-after-load \"yasnippet\"\n;;   '(progn\n;;      ;; company’¤È’¶¥’¹ç’¤¹’¤ë’¤Î’¤Çyasnippet’¤Î’¥Õ’¥£’¡¼’¥ë’¥É’°Ü’Æ°’¤Ï \"C-i\" ’¤Î’¤ß’¤Ë’¤¹’¤ë\n;;      (define-key yas-keymap (kbd \"<tab>\") nil)\n;;      (yas-global-mode 1)))\n\n;; ’¼«’Ê¬’ÍÑ’¡¦’ÄÉ’²Ã’ÍÑ’¥Æ’¥ó’¥×’¥ì’¡¼’¥È -> mysnippet’¤Ë’ºî’À®’¤·’¤¿’¥Æ’¥ó’¥×’¥ì’¡¼’¥È’¤¬’³Ê’Ç¼’¤µ’¤ì’¤ë\n(require 'yasnippet)\n(setq yas-snippet-dirs\n      '(\"~/.emacs.d/mysnippets\"\n        \"~/.emacs.d/yasnippets\"\n        ))\n\n;; ’´û’Â¸’¥¹’¥Ë’¥Ú’¥Ã’¥È’¤ò’ÁÞ’Æþ’¤¹’¤ë\n(define-key yas-minor-mode-map (kbd \"C-x i i\") 'yas-insert-snippet)\n;; ’¿·’µ¬’¥¹’¥Ë’¥Ú’¥Ã’¥È’¤ò’ºî’À®’¤¹’¤ë’¥Ð’¥Ã’¥Õ’¥¡’¤ò’ÍÑ’°Õ’¤¹’¤ë\n(define-key yas-minor-mode-map (kbd \"C-x i n\") 'yas-new-snippet)\n;; ’´û’Â¸’¥¹’¥Ë’¥Ú’¥Ã’¥È’¤ò’±Ü’Í÷’¡¦’ÊÔ’½¸’¤¹’¤ë\n(define-key yas-minor-mode-map (kbd \"C-x i v\") 'yas-visit-snippet-file)\n\n(yas-global-mode 1)\n\n\n\n\n;; ’´Ä’¶­’¤ò’Æü’ËÜ’¸ì’¡¢UTF-8’¤Ë’¤¹’¤ë\n(set-locale-environment nil)\n(set-language-environment \"Japanese\")\n(set-terminal-coding-system 'utf-8)\n(set-keyboard-coding-system 'utf-8)\n(set-buffer-file-coding-system 'utf-8)\n(setq default-buffer-file-coding-system 'utf-8)\n(set-default-coding-systems 'utf-8)\n(prefer-coding-system 'utf-8)\n\n\n;; visual-regexp-steroids’¤Î’Æ³’Æþ\n(require 'visual-regexp-steroids)\n(setq vr/engine 'python)\n\n\n\n\n(custom-set-faces\n ;; custom-set-faces was added by Custom.\n ;; If you edit it by hand, you could mess it up, so be careful.\n ;; Your init file should contain only one such instance.\n ;; If there is more than one, they won't work right.\n '(whitespace-empty ((t nil)))\n '(whitespace-indentation ((t nil)))\n '(whitespace-line ((t nil)))\n '(whitespace-space ((t (:background \"gray100\" :foreground \"grey\" :underline t :weight bold))))\n '(whitespace-sp" "\n;;\n(require 'auto-install)\n\n;;(require 'elscreen)\n;;(elscreen-set-prefix-key \"\\C-t\")\n;;(elscreen-start)\n\n;; use-package\n(require 'use-package)\n\n;; powerline\n(use-package powerline\n  :config\n  (powerline-default-theme))\n;;company mode\n(require 'company)\n(global-company-mode) ; ’Á´’¥Ð’¥Ã’¥Õ’¥¡’¤Ç’Í­’¸ú’¤Ë’¤¹’¤ë\n;;(setq company-idle-delay 0) ; ’¥Ç’¥Õ’¥©’¥ë’¥È’¤Ï0.5\n(setq company-minimum-prefix-length 2) ; ’¥Ç’¥Õ’¥©’¥ë’¥È’¤Ï4\n(setq company-selection-wrap-around t) ; ’¸õ’Êä’¤Î’°ì’ÈÖ’²¼’¤Ç’¤µ’¤é’¤Ë’²¼’¤Ë’¹Ô’¤³’¤¦’¤È’¤¹’¤ë’¤È’°ì’ÈÖ’¾å’¤Ë’Ìá’¤ë\n\n;;’Êä’´°’µ¡’Ç½’¤Î’Àß’Äê\n(require 'irony)\n(add-hook 'c-mode-hook 'irony-mode)\n(add-hook 'c++-mode-hook 'irony-mode)\n(add-hook 'objc-mode-hook 'irony-mode)\n(add-hook 'irony-mode-hook 'irony-cdb-autosetup-compile-options)\n(add-to-list 'company-backends 'company-irony) ;;backend’ÄÉ’²Ã\n\n(eval-after-load \"irony\"\n  '(progn\n     (custom-set-variables '(irony-additional-clang-options '(\"-std=c++11\")))\n     (add-to-list 'company-backends 'company-irony)\n     (add-hook 'irony-mode-hook 'irony-cdb-autosetup-compile-options)\n     (add-hook 'c-mode-common-hook 'irony-mode)))\n\n\n;; ’½é’´ü’²è’ÌÌ’¤ò’É½’¼¨’¤·’¤Ê’¤¤\n(setq inhibit-startup-message t)\n\n;;’¥¿’¥Ö’¤Î’Àß’Äê\n;;(require 'tabbar)\n;;(tabbar-mode)\n\n;; Firefox’¥é’¥¤’¥¯’¤Ê’¥­’¡¼’¥Ð’¥¤’¥ó’¥É’¤Ë\n;;(global-set-key [(control tab)]       'tabbar-forward)\n;;(global-set-key [(control shift tab)] 'tabbar-backward)\n;; -nw ’¤Ç’¤Ï’¸ú’¤«’¤Ê’¤¤’¤Î’¤Ç’ÊÌ’¤Î’¥­’¡¼’¥Ð’¥¤’¥ó’¥É’¤ò’³ä’¤ê’Åö’¤Æ’¤ë\n;;(global-set-key (kbd \"C-x n\") 'tabbar-forward)\n;;(global-set-key (kbd \"C-x p\") 'tabbar-backward)\n\n;; ’¥¿’¥Ö’¾å’¤Ç’¥Þ’¥¦’¥¹’¥Û’¥¤’¡¼’¥ë’¤ò’»È’¤¦’¤³’¤È’¤Ë’¤·’¤è\n;;(tabbar-mwheel-mode 1)\n;; ’¥°’¥ë’¡¼’¥×’¤ò’»È’¤ï’¤Ê’¤¤\n;;(setq tabbar-buffer-groups-function nil)\n;; ’º¸’Â¦’¤Î’¥Ü’¥¿’¥ó’¤ò’¾Ã’¤¹\n;(dolist (btn '(tabbar-buffer-home-button\n;              tabbar-scroll-left-button\n;               tabbar-scroll-right-button))\n;  (set btn (cons (cons \"\" nil)\n;                 (cons \"\" nil))))\n;; ’¿§’Àß’Äê\n;;(set-face-attribute ; ’¥Ð’¡¼’¼«’ÂÎ’¤Î’¿§\n;;  'tabbar-default nil\n;;   :background \"gray90\"\n;;   :family \"Inconsolata\"\n;;   :height 1.0)\n;;(set-face-attribute ; ’¥¢’¥¯’¥Æ’¥£’¥Ö’¤Ê’¥¿’¥Ö\n;;  'tabbar-selected nil\n;;   :background \"brown40\"\n;;   :foreground \"white\"                  ;\n;;   :weight 'bold\n;;   :box nil)\n;;(set-face-attribute ; ’Èó’¥¢’¥¯’¥Æ’¥£’¥Ö’¤Ê’¥¿’¥Ö\n;;  'tabbar-unselected nil\n;;   :background \"gray90\"\n;;   :foreground \"black\"\n;;   :box nil)\n\n\n;; ’Éý’Àß’Äê\n;;  (set-face-attribute\n;;   'tabbar-separator nil\n;;   :height 0.7)\n;;\n;; tabbar’¤Î’Àß’Äê\n;;\n(require 'tabbar)\n(tabbar-mode)\n\n(tabbar-mwheel-mode nil)                  ;; ’¥Þ’¥¦’¥¹’¥Û’¥¤’¡¼’¥ë’Ìµ’¸ú\n(setq tabbar-buffer-groups-function nil)  ;; ’¥°’¥ë’¡¼’¥×’Ìµ’¸ú\n(setq tabbar-use-images nil)              ;; ’²è’Áü’¤ò’»È’¤ï’¤Ê’¤¤\n\n\n;;----- ’¥­’¡¼’¤Ë’³ä’¤ê’Åö’¤Æ’¤ë\n(global-set-key (kbd \"<C-tab>\") 'tabbar-forward-tab)\n(global-set-key (kbd \"<C-S-tab>\") 'tabbar-backward-tab)\n;;(global-set-key (kbd \"<f8>\") 'tabbar-forward-tab)\n;;(global-set-key (kbd \"<f7>\") 'tabbar-backward-tab)\n;;(global-unset-key (kbd \"C-z\"))\n(global-set-key (kbd \"C-z C-n\") 'tabbar-forward-tab)\n(global-set-key (kbd \"C-z C-p\") 'tabbar-backward-tab)\n\n\n;;----- ’º¸’Â¦’¤Î’¥Ü’¥¿’¥ó’¤ò’¾Ã’¤¹\n(dolist (btn '(tabbar-buffer-home-button\n               tabbar-scroll-left-button\n               tabbar-scroll-right-button))\n  (set btn (cons (cons \"\" nil)\n                 (cons \"\" nil))))\n\n\n;;----- ’¥¿’¥Ö’¤Î’¥»’¥Ñ’¥ì’¡¼’¥¿’¡¼’¤Î’Ä¹’¤µ\n(setq tabbar-separator '(2.0))\n\n\n;;----- ’¥¿’¥Ö’¤Î’¿§’¡ÊCUI’¤Î’»þ’¡£GUI’¤Î’»þ’¤Ï’¸å’¤Ç’¥«’¥é’¡¼’¥Æ’¡¼’¥Þ’¤¬’Å¬’ÍÑ’¡Ë\n(set-face-attribute\n 'tabbar-default nil\n :background \"blue\"\n :foreground \"white\"\n )\n(set-face-attribute\n 'tabbar-selected nil\n :background \"#ff5f00\"\n :foreground \"brightwhite\"\n :box nil\n )\n;(set-face-attribute\n; 'tabbar-modified nil\n;:background \"brightred\"\n;:foreground \"brightwhite\"\n;:box nil\n;)\n\n(when window-system                       ; GUI’»þ\n  ;; ’³°’´Ñ’ÊÑ’¹¹\n  (set-face-attribute\n   'tabbar-default nil\n   :family \"MeiryoKe_Gothic\"\n   :background \"#34495E\"\n   :foreground \"#EEEEEE\"\n   :height 0.85\n   )\n  (set-face-attribute\n   'tabbar-unselected nil\n   :background \"#34495E\"\n   :foreground \"#EEEEEE\"\n   :box nil\n  )\n;  (set-face-attribute\n;   'tabbar-modified nil\n;   :background \"#E67E22\"\n;   :foreground \"#EEEEEE\"\n;   :box nil\n;  )\n  (set-face-attribute\n   'tabbar-selected nil\n   :background \"#E74C3C\"\n   :foreground \"#EEEEEE\"\n   :box nil)\n  (set-face-attribute\n   'tabbar-button nil\n   :box nil)\n  (set-face-attribute\n   'tabbar-separator nil\n   :height 2.0)\n)\n\n;;----- ’É½’¼¨’¤¹’¤ë’¥Ð’¥Ã’¥Õ’¥¡\n(defun my-tabbar-buffer-list ()\n  (delq nil\n        (mapcar #'(lambda (b)\n                    (cond\n                     ;; Always include the current buffer.\n                     ((eq (current-buffer) b) b)\n                     ((buffer-file-name b) b)\n                     ((char-equal ?\\  (aref (buffer-name b) 0)) nil)\n                     ((equal \"*scratch*\" (buffer-name b)) b) ; *scratch*’¥Ð’¥Ã’¥Õ’¥¡’¤Ï’É½’¼¨’¤¹’¤ë\n                     ((char-equal ?* (aref (buffer-name b) 0)) nil) ; ’¤½’¤ì’°Ê’³°’¤Î * ’¤Ç’»Ï’¤Þ’¤ë’¥Ð’¥Ã’¥Õ’¥¡’¤Ï’É½’¼¨’¤·’¤Ê’¤¤\n                     ((buffer-live-p b) b)))\n                (buffer-list))))\n(setq tabbar-buffer-list-function 'my-tabbar-buffer-list)\n\n\n;;; helm\n;;(package-install 'helm)\n(require 'helm-config)\n(helm-mode 1)\n;;(helm-migemo-mode 1)\n\n;; C-h’¤Ç’Á°’¤Î’Ê¸’»ú’ºï’½ü\n(define-key helm-map (kbd \"C-h\") 'delete-backward-char)\n(define-key helm-find-files-map (kbd \"C-h\") 'delete-backward-char)\n\n(define-key helm-map (kbd \"<tab>\") 'helm-execute-persistent-action) ; rebind tab to run persistent action\n(define-key helm-map (kbd \"C-i\") 'helm-execute-persistent-action) ; make TAB work in terminal\n(define-key helm-map (kbd \"C-z\")  'helm-select-action) ; list actions using C-z\n\n;;(define-key helm-find-files-map (kbd \"TAB\") 'helm-execute-persistent-action)\n;;(define-key helm-read-file-map (kbd \"TAB\") 'helm-execute-persistent-action)\n\n\n;; ’¥­’¡¼’¥Ð’¥¤’¥ó’¥É\n(global-set-key (kbd \"C-o\") 'helm-mini)\n(global-set-key (kbd \"C-c a\") 'helm-do-ag)\n(global-set-key (kbd \"C-c h\") 'helm-mini)\n(define-key global-map (kbd \"C-x b\")   'helm-buffers-list)\n;;(define-key global-map (kbd \"C-x b\") 'helm-for-files)\n(define-key global-map (kbd \"C-x C-f\") 'helm-find-files)\n(define-key global-map (kbd \"M-x\")     'helm-M-x)\n(define-key global-map (kbd \"M-y\")     'helm-show-kill-ring)\n\n(add-to-list 'helm-completing-read-handlers-alist '(write-file . nil))\n\n;; ’¥¿’¥¤’¥È’¥ë’¥Ñ’¡¼’¤Ë’¥Õ’¥¡’¥¤’¥ë’¤Î’¥Õ’¥ë’¥Ñ’¥¹’¤ò’É½’¼¨’¤¹’¤ë\n(setq frame-title-format \"%f\")\n\n;;’¥­’¡¼’¥Ð’¥¤’¥ó’¥É\n(define-key global-map [?ŠÜ] [?\\\\])     ;;\n(define-key global-map (kbd \"C-,\") 'beginning-of-buffer)     ;;\n(define-key global-map (kbd \"C-.\") 'end-of-buffer)\n(define-key global-map (kbd \"C-x C-/\") 'eval-buffer)\n\n;; ’¹Ô’¿ô’¤ò’É½’¼¨’¤¹’¤ë\n(global-linum-mode t)\n\n\n;; ’²þ’¹Ô’¥³’¡¼’¥É’¤ò’É½’¼¨’¤¹’¤ë\n;;(setq eol-mnemonic-dos \"(CRLF)\")\n;;(setq eol-mnemonic-mac \"(CR)\")\n;;(setq eol-mnemonic-unix \"(LF)\")\n\n;;’ÆÃ’¼ì’Ê¸’»ú’¤Ë’´Ø’¤¹’¤ë’É½’¼¨’Àß’Äê\n(require 'whitespace)\n;; ’¥¹’¥Ú’¡¼’¥¹’¤Î’Äê’µÁ’¤Ï’Á´’³Ñ’¥¹’¥Ú’¡¼’¥¹’¤È’¤¹’¤ë’¡£\n(setq whitespace-trailing-regexp  \"\\\\([ \\u00A0]+\\\\)$\")\n(setq whitespace-space-regexp \"\\\\(\\u3000+\\\\)\")\n(defvar my/bg-color \"#232323\")\n\n;;whitespace-space-regexp\n\n\n;;’¶ñ’ÂÎ’Åª’¤Ê’Àß’Äê\n(set-face-foreground 'whitespace-space \"white40\")\n(set-face-bold-p 'whitespace-space t)\n(set-face-underline  'whitespace-space t)\n(set-face-foreground 'whitespace-newline  \"gray28\")        ;;’²þ’¹Ô’Ê¸’»ú’¤Î’¿§\n;;(set-face-background 'whitespace-newline \"gray28\")\n\n;;’ÆÃ’¼ì’Ê¸’»ú’¤ò’É½’¼¨’¤µ’¤»’¤ë\n(global-whitespace-mode 1)\n\n\n;; M-ESC ESC ’¤Ë’¤è’¤ë ’¥¦’¥£’¥ó’¥É’¥¦’¤Î’Ã±’°ì’²½’¤ò’Ìµ’¸ú’²½\n(define-key global-map (kbd \"M-ESC ESC\") nil)\n\n\n;; ’Îó’¿ô’¤ò’É½’¼¨’¤¹’¤ë\n(column-number-mode t)\n\n;; ’ÂÐ’±þ’¤¹’¤ë’³ç’¸Ì’¤ò’¸÷’¤é’¤»’¤ë\n(show-paren-mode t)\n(put 'upcase-region 'disabled nil)\n\n(setq auto-mode-alist\n(cons '(\"\\\\.ml[iylp]?$\" . caml-mode) auto-mode-alist))\n(autoload 'caml-mode \"caml\" \"Major mode for editing Caml code.\" t)\n(autoload 'run-caml \"inf-caml\" \"Run an inferior Caml process.\" t)\n;;(if window-system (require 'caml-font))\n;;(setq inferior-caml-program \"/usr/local/bin/ocaml\")\n\n\n'(load \"'\"$HOME\"'/.opam/system/share/emacs/site-lisp/tuareg-site-file\")'\n(add-to-list 'auto-mode-plist '(\"\\\\.ml[iylp]?$\" . tuareg-mode))\n(autoload 'tuareg-mode \"tuareg\" \"Major mode for editing OCaml code.\" t)\n(autoload 'tuareg-run-ocaml \"tuareg\" \"Run an inferior OCaml process.\" t)\n(autoload 'ocamldebug \"ocamldebug\" \"Run the OCaml debugger.\" t)\n\n\n\n;;(set-face-background 'default \"#303030\")\n;;(set-foreground-color \"#ffffff\")\n(load-theme 'deeper-blue t)\n\n\n\n;; run yatex mode when open .tex file\n(setq auto-mode-alist\n(cons (cons \"\\\\.tex$\" 'yatex-mode) auto-mode-alist))\n(autoload 'yatex-mode \"yatex\" \"Yet Another LaTeX mode\" t)\n\n(setq dviprint-command-format \"dvipdfmx %s\")\n\n;; yatex load path\n(setq load-path (cons (expand-file-name\n\"/Applications/Emacs.app/Contents/Resources/site-lisp/yatex\")\nload-path))\n;; use utf-8 on yatex mode\n(setq YaTeX-kanji-code 4)\n\n;; preview\n(setq dvi2-command \"open -a Preview\") \n(defvar YaTeX-dvi2-command-ext-alist\n  '((\"xdvi\" . \".dvi\")\n    (\"ghostview\\\\|gv\" . \".ps\")\n    (\"acroread\\\\|pdf\\\\|Preview\\\\|open\" . \".pdf\")))\n\n;;yatex’¤Ë’¥¢’¥¦’¥È’¥é’¥¤’¥ó’µ¡’Ç½’¤ò’ÄÉ’²Ã\n(defun latex-outline-level ()\n  (interactive)\n  (let ((str nil))\n	(looking-at outline-regexp)\n	(setq str (buffer-substring-no-properties (match-beginning 0) (match-end 0)))\n	(cond ;; ’¥­’¡¼’¥ï’¡¼’¥É ’¤Ë ’³¬’ÁØ ’¤ò’ÊÖ’¤¹\n	 ((string-match \"documentclass\" str) 1)\n	 ((string-match \"documentstyle\" str) 1)\n	 ((string-match \"part\" str) 2)\n	 ((string-match \"chapter\" str) 3)\n	 ((string-match \"appendix\" str) 3)\n	 ((string-match \"subsubsection\" str) 6)\n	 ((string-match \"subsection\" str) 5)\n	 ((string-match \"section\" str) 4)\n	 (t (+ 6 (length str)))\n	 )))\n\n(add-hook 'yatex-mode-hook\n		  '(lambda ()\n			 (setq outline-level 'latex-outline-level)\n			 (make-local-variable 'outline-regexp)\n			 (setq outline-regexp\n				  (concat \"[ \\t]*\\\\\\\\\\\\(documentstyle\\\\|documentclass\\\\|\"\n				          \"part\\\\|chapter\\\\|appendix\\\\|section\\\\|subsection\\\\|subsubsection\\\\)\"\n				          \"\\\\*?[ \\t]*[[{]\"))\n			 (outline-minor-mode t)))\n\n\n(require 'multi-eshell)\n\n(require 'undo-tree)\n(global-undo-tree-mode)\n\n\n\n;; (require 'yasnippet)\n;; (yas-global-mode)\n;; (eval-after-load \"yasnippet\"\n;;   '(progn\n;;      ;; company’¤È’¶¥’¹ç’¤¹’¤ë’¤Î’¤Çyasnippet’¤Î’¥Õ’¥£’¡¼’¥ë’¥É’°Ü’Æ°’¤Ï \"C-i\" ’¤Î’¤ß’¤Ë’¤¹’¤ë\n;;      (define-key yas-keymap (kbd \"<tab>\") nil)\n;;      (yas-global-mode 1)))\n\n;; ’¼«’Ê¬’ÍÑ’¡¦’ÄÉ’²Ã’ÍÑ’¥Æ’¥ó’¥×’¥ì’¡¼’¥È -> mysnippet’¤Ë’ºî’À®’¤·’¤¿’¥Æ’¥ó’¥×’¥ì’¡¼’¥È’¤¬’³Ê’Ç¼’¤µ’¤ì’¤ë\n(require 'yasnippet)\n(setq yas-snippet-dirs\n      '(\"~/.emacs.d/mysnippets\"\n        \"~/.emacs.d/yasnippets\"\n        ))\n\n;; ’´û’Â¸’¥¹’¥Ë’¥Ú’¥Ã’¥È’¤ò’ÁÞ’Æþ’¤¹’¤ë\n(define-key yas-minor-mode-map (kbd \"C-x i i\") 'yas-insert-snippet)\n;; ’¿·’µ¬’¥¹’¥Ë’¥Ú’¥Ã’¥È’¤ò’ºî’À®’¤¹’¤ë’¥Ð’¥Ã’¥Õ’¥¡’¤ò’ÍÑ’°Õ’¤¹’¤ë\n(define-key yas-minor-mode-map (kbd \"C-x i n\") 'yas-new-snippet)\n;; ’´û’Â¸’¥¹’¥Ë’¥Ú’¥Ã’¥È’¤ò’±Ü’Í÷’¡¦’ÊÔ’½¸’¤¹’¤ë\n(define-key yas-minor-mode-map (kbd \"C-x i v\") 'yas-visit-snippet-file)\n\n(yas-global-mode 1)\n\n\n\n\n;; ’´Ä’¶­’¤ò’Æü’ËÜ’¸ì’¡¢UTF-8’¤Ë’¤¹’¤ë\n(set-locale-environment nil)\n(set-language-environment \"Japanese\")\n(set-terminal-coding-system 'utf-8)\n(set-keyboard-coding-system 'utf-8)\n(set-buffer-file-coding-system 'utf-8)\n(setq default-buffer-file-coding-system 'utf-8)\n(set-default-coding-systems 'utf-8)\n(prefer-coding-system 'utf-8)\n\n\n;; visual-regexp-steroids’¤Î’Æ³’Æþ\n(require 'visual-regexp-steroids)\n(setq vr/engine 'python)\n\n\n\n\n(custom-set-faces\n ;; custom-set-faces was added by Custom.\n ;; If you edit it by hand, you could mess it up, so be careful.\n ;; Your init file should contain only one such instance.\n ;; If there is more than one, they won't work right.\n '(whitespace-empty ((t nil)))\n '(whitespace-indentation ((t nil)))\n '(whitespace-line ((t nil)))\n '(whitespace-space ((t (:background \"gray100\" :foreground \"grey\" :underline t :weight bold))))\n '(whitespace-sp" "  2                   3                   5                   7\n              11                  13                  17                  19\n              23                  29                  31                  37\n              41                  43                  47                  53\n              59                  61                  67                  71\n              73                  79                  83                  89\n    100       97                 101                 103                 107\n             109                 113                 127                 131\n             137                 139                 149                 151\n             157                 163                 167                 173\n             179                 181                 191                 193\n             197        200      199                 211                 223\n             227                 229                 233                 239\n             241                 251                 257                 263\n             269                 271                 277                 281\n             283        300      293                 307                 311\n             313                 317                 331                 337\n             347                 349                 353                 359\n             367                 373                 379                 383\n             389        400      397                 401                 409\n             419                 421                 431                 433\n             439                 443                 449                 457\n             461                 463                 467                 479\n             487                 491        500      499                 503\n             509                 521                 523                 541\n             547                 557                 563                 569\n             571                 577                 587                 593\n    600      599                 601                 607                 613\n             617                 619                 631                 641\n             643                 647                 653                 659\n             661                 673                 677                 683\n    700      691                 701                 709                 719\n             727                 733                 739                 743\n             751                 757                 761                 769\n             773                 787        800      797                 809\n             811                 821                 823                 827\n             829                 839                 853                 857\n             859                 863                 877                 881\n             883        900      887                 907                 911\n             919                 929                 937                 941\n             947                 953                 967                 971\n             977                 983                 991       1000      997\n            1009                1013                1019                1021\n            1031                1033                1039                1049\n            1051                1061                1063                1069\n            1087                1091                1093                1097\n            1103                1109                1117                1123\n            1129                1151                1153                1163\n            1171                1181                1187                1193\n            1201                1213                1217                1223\n            1229                1231                1237                1249\n            1259                1277                1279                1283\n            1289                1291                1297                1301\n            1303                1307                1319                1321\n            1327                1361                1367                1373\n            1381                1399                1409                1423\n            1427                1429                1433                1439\n            1447                1451                1453                1459\n            1471                1481                1483                1487\n            1489                1493       1500     1499                1511\n            1523                1531                1543                1549\n            1553                1559                1567                1571\n            1579                1583                1597                1601\n            1607                1609                1613                1619\n            1621                1627                1637                1657\n            1663                1667                1669                1693\n            1697                1699                1709                1721\n            1723                1733                1741                1747\n            1753                1759                1777                1783\n            1787                1789                1801                1811\n            1823                1831                1847                1861\n            1867                1871                1873                1877\n            1879                1889                1901                1907\n            1913                1931                1933                1949\n            1951                1973                1979                1987\n            1993                1997       2000     1999                2003\n            2011                2017                2027                2029\n            2039                2053                2063                2069\n            2081                2083                2087                2089\n            2099                2111                2113                2129\n            2131                2137                2141                2143\n            2153                2161                2179                2203\n            2207                2213                2221                2237\n            2239                2243                2251                2267\n            2269                2273                2281                2287\n            2293                2297                2309                2311\n            2333                2339                2341                2347\n            2351                2357                2371                2377\n            2381                2383                2389                2393\n            2399                2411                2417                2423\n            2437                2441                2447                2459\n            2467                2473       2500     2477                2503\n            2521                2531                2539                2543\n            2549                2551                2557                2579\n            2591                2593                2609                2617\n            2621                2633                2647                2657\n            2659                2663                2671                2677\n            2683                2687                2689                2693\n            2699                2707                2711                2713\n            2719                2729                2731                2741\n            2749                2753                2767                2777\n            2789                2791                2797                2801\n            2803                2819                2833                2837\n            2843                2851                2857                2861\n            2879                2887                2897                2903\n            2909                2917                2927                2939\n            2953                2957                2963                2969\n            2971       3000     2999                3001                3011\n            3019                3023                3037                3041\n            3049                3061                3067                3079\n            3083                3089                3109                3119\n            3121                3137                3163                3167\n            3169                3181                3187                3191\n            3203                3209                3217                3221\n            3229                3251                3253                3257\n            3259                3271                3299                3301\n            3307                3313                3319                3323\n            3329                3331                3343                3347\n            3359                3361                3371                3373\n            3389                3391                3407                3413\n            3433                3449                3457                3461\n            3463                3467                3469                3491\n   3500     3499                3511                3517                3527\n            3529                3533                3539                3541\n            3547                3557                3559                3571\n            3581                3583                3593                3607\n            3613                3617                3623                3631\n            3637                3643                3659                3671\n            3673                3677                3691                3697\n            3701                3709                3719                3727\n            3733                3739                3761                3767\n            3769                3779                3793                3797\n            3803                3821                3823                3833\n            3847                3851                3853                3863\n            3877                3881                3889                3907\n            3911                3917                3919                3923\n            3929                3931                3943                3947\n            3967       4000     3989                4001                4003\n            4007                4013                4019                4021\n            4027                4049                4051                4057\n            4073                4079                4091                4093\n            4099                4111                4127                4129\n            4133                4139                4153                4157\n            4159                4177                4201                4211\n            4217                4219                4229                4231\n            4241                4243                4253                4259\n            4261                4271                4273                4283\n            4289                4297                4327                4337\n            4339                4349                4357                4363\n            4373                4391                4397                4409\n            4421                4423                4441                4447\n            4451                4457                4463                4481\n            4483       4500     4493                4507                4513\n            4517                4519                4523                4547\n            4549                4561                4567                4583\n            4591                4597                4603                4621\n            4637                4639                4643                4649\n            4651                4657                4663                4673\n            4679                4691                4703                4721\n            4723                4729                4733                4751\n            4759                4783                4787                4789\n            4793                4799                4801                4813\n            4817                4831                4861                4871\n            4877                4889                4903                4909\n            4919                4931                4933                4937\n            4943                4951                4957                4967\n            4969                4973                4987                4993\n   5000     4999                5003                5009                5011\n            5021                5023                5039                5051\n            5059                5077                5081                5087\n            5099                5101                5107                5113\n            5119                5147                5153                5167\n            5171                5179                5189                5197\n            5209                5227                5231                5233\n            5237                5261                5273                5279\n            5281                5297                5303                5309\n            5323                5333                5347                5351\n            5381                5387                5393                5399\n            5407                5413                5417                5419\n            5431                5437                5441                5443\n            5449                5471                5477                5479\n   5500     5483                5501                5503                5507\n            5519                5521                5527                5531\n            5557                5563                5569                5573\n            5581                5591                5623                5639\n            5641                5647                5651                5653\n            5657                5659                5669                5683\n            5689                5693                5701                5711\n            5717                5737                5741                5743\n            5749                5779                5783                5791\n            5801                5807                5813                5821\n            5827                5839                5843                5849\n            5851                5857                5861                5867\n            5869                5879                5881                5897\n            5903                5923                5927                5939\n            5953                5981       6000     5987                6007\n            6011                6029                6037                6043\n            6047                6053                6067                6073\n            6079                6089                6091                6101\n            6113                6121                6131                6133\n            6143                6151                6163                6173\n            6197                6199                6203                6211\n            6217                6221                6229                6247\n            6257                6263                6269                6271\n            6277                6287                6299                6301\n            6311                6317                6323                6329\n            6337                6343                6353                6359\n            6361                6367                6373                6379\n            6389                6397                6421                6427\n            6449                6451                6469                6473\n            6481       6500     6491                6521                6529\n            6547                6551                6553                6563\n            6569                6571                6577                6581\n            6599                6607                6619                6637\n            6653                6659                6661                6673\n            6679                6689                6691                6701\n            6703                6709                6719                6733\n            6737                6761                6763                6779\n            6781                6791                6793                6803\n            6823                6827                6829                6833\n            6841                6857                6863                6869\n            6871                6883                6899                6907\n            6911                6917                6947                6949\n            6959                6961                6967                6971\n            6977                6983                6991       7000     6997\n            7001                7013                7019                7027\n            7039                7043                7057                7069\n            7079                7103                7109                7121\n            7127                7129                7151                7159\n            7177                7187                7193                7207\n            7211                7213                7219                7229\n            7237                7243                7247                7253\n            7283                7297                7307                7309\n            7321                7331                7333                7349\n            7351                7369                7393                7411\n            7417                7433                7451                7457\n            7459                7477                7481                7487\n            7489       7500     7499                7507                7517\n            7523                7529                7537                7541\n            7547                7549                7559                7561\n            7573                7577                7583                7589\n            7591                7603                7607                7621\n            7639                7643                7649                7669\n            7673                7681                7687                7691\n            7699                7703                7717                7723\n            7727                7741                7753                7757\n            7759                7789                7793                7817\n            7823                7829                7841                7853\n            7867                7873                7877                7879\n            7883                7901                7907                7919\n            7927                7933                7937                7949\n            7951                7963       8000     7993                8009\n            8011                8017                8039                8053\n            8059                8069                8081                8087\n            8089                8093                8101                8111\n            8117                8123                8147                8161\n            8167                8171                8179                8191\n            8209                8219                8221                8231\n            8233                8237                8243                8263\n            8269                8273                8287                8291\n            8293                8297                8311                8317\n            8329                8353                8363                8369\n            8377                8387                8389                8419\n            8423                8429                8431                8443\n            8447                8461       8500     8467                8501\n            8513                8521                8527                8537\n            8539                8543                8563                8573\n            8581                8597                8599                8609\n            8623                8627                8629                8641\n            8647                8663                8669                8677\n            8681                8689                8693                8699\n            8707                8713                8719                8731\n            8737                8741                8747                8753\n            8761                8779                8783                8803\n            8807                8819                8821                8831\n            8837                8839                8849                8861\n            8863                8867                8887                8893\n            8923                8929                8933                8941\n            8951                8963                8969                8971\n   9000     8999                9001                9007                9011\n            9013                9029                9041                9043\n            9049                9059                9067                9091\n            9103                9109                9127                9133\n            9137                9151                9157                9161\n            9173                9181                9187                9199\n            9203                9209                9221                9227\n            9239                9241                9257                9277\n            9281                9283                9293                9311\n            9319                9323                9337                9341\n            9343                9349                9371                9377\n            9391                9397                9403                9413\n            9419                9421                9431                9433\n            9437                9439                9461                9463\n            9467                9473                9479                9491\n   9500     9497                9511                9521                9533\n            9539                9547                9551                9587\n            9601                9613                9619                9623\n            9629                9631                9643                9649\n            9661                9677                9679                9689\n            9697                9719                9721                9733\n            9739                9743                9749                9767\n            9769                9781                9787                9791\n            9803                9811                9817                9829\n            9833                9839                9851                9857\n            9859                9871                9883                9887\n            9901                9907                9923                9929\n            9931                9941                9949                9967\n  10000     9973               10007               10009               10037\n           10039               10061               10067               10069\n           10079               10091               10093               10099\n           10103               10111               10133               10139\n           10141               10151               10159               10163\n           10169               10177               10181               10193\n           10211               10223               10243               10247\n           10253               10259               10267               10271\n           10273               10289               10301               10303\n           10313               10321               10331               10333\n           10337               10343               10357               10369\n           10391               10399               10427               10429\n           10433               10453               10457               10459\n           10463               10477               10487               10499\n           10501               10513               10529               10531\n           10559               10567               10589               10597\n           10601               10607               10613               10627\n           10631               10639               10651               10657\n           10663               10667               10687               10691\n           10709               10711               10723               10729\n           10733               10739               10753               10771\n           10781               10789               10799               10831\n           10837               10847               10853               10859\n           10861               10867               10883               10889\n           10891               10903               10909               10937\n           10939               10949               10957               10973\n           10979               10987      11000    10993               11003\n           11027               11047               11057               11059\n           11069               11071               11083               11087\n           11093               11113               11117               11119\n           11131               11149               11159               11161\n           11171               11173               11177               11197\n           11213               11239               11243               11251\n           11257               11261               11273               11279\n           11287               11299               11311               11317\n           11321               11329               11351               11353\n           11369               11383               11393               11399\n           11411               11423               11437               11443\n           11447               11467               11471               11483\n           11489               11491               11497               11503\n           11519               11527               11549               11551\n           11579               11587               11593               11597\n           11617               11621               11633               11657\n           11677               11681               11689               11699\n           11701               11717               11719               11731\n           11743               11777               11779               11783\n           11789               11801               11807               11813\n           11821               11827               11831               11833\n           11839               11863               11867               11887\n           11897               11903               11909               11923\n           11927               11933               11939               11941\n           11953               11959               11969               11971\n           11981      12000    11987               12007               12011\n           12037               12041               12043               12049\n           12071               12073               12097               12101\n           12107               12109               12113               12119\n           12143               12149               12157               12161\n           12163               12197               12203               12211\n           12227               12239               12241               12251\n           12253               12263               12269               12277\n           12281               12289               12301               12323\n           12329               12343               12347               12373\n           12377               12379               12391               12401\n           12409               12413               12421               12433\n           12437               12451               12457               12473\n           12479               12487               12491               12497\n           12503               12511               12517               12527\n           12539               12541               12547               12553\n           12569               12577               12583               12589\n           12601               12611               12613               12619\n           12637               12641               12647               12653\n           12659               12671               12689               12697\n           12703               12713               12721               12739\n           12743               12757               12763               12781\n           12791               12799               12809               12821\n           12823               12829               12841               12853\n           12889               12893               12899               12907\n           12911               12917               12919               12923\n           12941               12953               12959               12967\n           12973               12979      13000    12983               13001\n           13003               13007               13009               13033\n           13037               13043               13049               13063\n           13093               13099               13103               13109\n           13121               13127               13147               13151\n           13159               13163               13171               13177\n           13183               13187               13217               13219\n           13229               13241               13249               13259\n           13267               13291               13297               13309\n           13313               13327               13331               13337\n           13339               13367               13381               13397\n           13399               13411               13417               13421\n           13441               13451               13457               13463\n           13469               13477               13487               13499\n           13513               13523               13537               13553\n           13567               13577               13591               13597\n           13613               13619               13627               13633\n           13649               13669               13679               13681\n           13687               13691               13693               13697\n           13709               13711               13721               13723\n           13729               13751               13757               13759\n           13763               13781               13789               13799\n           13807               13829               13831               13841\n           13859               13873               13877               13879\n           13883               13901               13903               13907\n           13913               13921               13931               13933\n           13963               13967               13997      14000    13999\n           14009               14011               14029               14033\n           14051               14057               14071               14081\n           14083               14087               14107               14143\n           14149               14153               14159               14173\n           14177               14197               14207               14221\n           14243               14249               14251               14281\n           14293               14303               14321               14323\n           14327               14341               14347               14369\n           14387               14389               14401               14407\n           14411               14419               14423               14431\n           14437               14447               14449               14461\n           14479               14489               14503               14519\n           14533               14537               14543               14549\n           14551               14557               14561               14563\n           14591               14593               14621               14627\n           14629               14633               14639               14653\n           14657               14669               14683               14699\n           14713               14717               14723               14731\n           14737               14741               14747               14753\n           14759               14767               14771               14779\n           14783               14797               14813               14821\n           14827               14831               14843               14851\n           14867               14869               14879               14887\n           14891               14897               14923               14929\n           14939               14947               14951               14957\n           14969      15000    14983               15013               15017\n           15031               15053               15061               15073\n           15077               15083               15091               15101\n           15107               15121               15131               15137\n           15139               15149               15161               15173\n           15187               15193               15199               15217\n           15227               15233               15241               15259\n           15263               15269               15271               15277\n           15287               15289               15299               15307\n           15313               15319               15329               15331\n           15349               15359               15361               15373\n           15377               15383               15391               15401\n           15413               15427               15439               15443\n           15451               15461               15467               15473\n           15493               15497               15511               15527\n           15541               15551               15559               15569\n           15581               15583               15601               15607\n           15619               15629               15641               15643\n           15647               15649               15661               15667\n           15671               15679               15683               15727\n           15731               15733               15737               15739\n           15749               15761               15767               15773\n           15787               15791               15797               15803\n           15809               15817               15823               15859\n           15877               15881               15887               15889\n           15901               15907               15913               15919\n           15923               15937               15959               15971\n           15973      16000    15991               16001               16007\n           16033               16057               16061               16063\n           16067               16069               16073               16087\n           16091               16097               16103               16111\n           16127               16139               16141               16183\n           16187               16189               16193               16217\n           16223               16229               16231               16249\n           16253               16267               16273               16301\n           16319               16333               16339               16349\n           16361               16363               16369               16381\n           16411               16417               16421               16427\n           16433               16447               16451               16453\n           16477               16481               16487               16493\n           16519               16529               16547               16553\n           16561               16567               16573               16603\n           16607               16619               16631               16633\n           16649               16651               16657               16661\n           16673               16691               16693               16699\n           16703               16729               16741               16747\n           16759               16763               16787               16811\n           16823               16829               16831               16843\n           16871               16879               16883               16889\n           16901               16903               16921               16927\n           16931               16937               16943               16963\n           16979               16981               16987      17000    16993\n           17011               17021               17027               17029\n           17033               17041               17047               17053\n           17077               17093               17099               17107\n           17117               17123               17137               17159\n           17167               17183               17189               17191\n           17203               17207               17209               17231\n           17239               17257               17291               17293\n           17299               17317               17321               17327\n           17333               17341               17351               17359\n           17377               17383               17387               17389\n           17393               17401               17417               17419\n           17431               17443               17449               17467\n           17471               17477               17483               17489\n           17491               17497               17509               17519\n           17539               17551               17569               17573\n           17579               17581               17597               17599\n           17609               17623               17627               17657\n           17659               17669               17681               17683\n           17707               17713               17729               17737\n           17747               17749               17761               17783\n           17789               17791               17807               17827\n           17837               17839               17851               17863\n           17881               17891               17903               17909\n           17911               17921               17923               17929\n           17939               17957               17959               17971\n           17977               17981               17987      18000    17989\n           18013               18041               18043               18047\n           18049               18059               18061               18077\n           18089               18097               18119               18121\n           18127               18131               18133               18143\n           18149               18169               18181               18191\n           18199               18211               18217               18223\n           18229               18233               18251               18253\n           18257               18269               18287               18289\n           18301               18307               18311               18313\n           18329               18341               18353               18367\n           18371               18379               18397               18401\n           18413               18427               18433               18439\n           18443               18451               18457               18461\n           18481               18493               18503               18517\n           18521               18523               18539               18541\n           18553               18583               18587               18593\n           18617               18637               18661               18671\n           18679               18691               18701               18713\n           18719               18731               18743               18749\n           18757               18773               18787               18793\n           18797               18803               18839               18859\n           18869               18899               18911               18913\n           18917               18919               18947               18959\n           18973      19000    18979               19001               19009\n           19013               19031               19037               19051\n           19069               19073               19079               19081\n           19087               19121               19139               19141\n           19157               19163               19181               19183\n           19207               19211               19213               19219\n           19231               19237               19249               19259\n           19267               19273               19289               19301\n           19309               19319               19333               19373\n           19379               19381               19387               19391\n           19403               19417               19421               19423\n           19427               19429               19433               19441\n           19447               19457               19463               19469\n           19471               19477               19483               19489\n           19501               19507               19531               19541\n           19543               19553               19559               19571\n           19577               19583               19597               19603\n           19609               19661               19681               19687\n           19697               19699               19709               19717\n           19727               19739               19751               19753\n           19759               19763               19777               19793\n           19801               19813               19819               19841\n           19843               19853               19861               19867\n           19889               19891               19913               19919\n           19927               19937               19949               19961\n           19963               19973               19979               19991\n           19993      20000    19997               20011               20021\n           20023               20029               20047               20051\n           20063               20071               20089               20101\n           20107               20113               20117               20123\n           20129               20143               20147               20149\n           20161               20173               20177               20183\n           20201               20219               20231               20233\n           20249               20261               20269               20287\n           20297               20323               20327               20333\n           20341               20347               20353               20357\n           20359               20369               20389               20393\n           20399               20407               20411               20431\n           20441               20443               20477               20479\n           20483               20507               20509               20521\n           20533               20543               20549               20551\n           20563               20593               20599               20611\n           20627               20639               20641               20663\n           20681               20693               20707               20717\n           20719               20731               20743               20747\n           20749               20753               20759               20771\n           20773               20789               20807               20809\n           20849               20857               20873               20879\n           20887               20897               20899               20903\n           20921               20929               20939               20947\n           20959               20963               20981      21000    20983\n           21001               21011               21013               21017\n           21019               21023               21031               21059\n           21061               21067               21089               21101\n           21107               21121               21139               21143\n           21149               21157               21163               21169\n           21179               21187               21191               21193\n           21211               21221               21227               21247\n           21269               21277               21283               21313\n           21317               21319               21323               21341\n           21347               21377               21379               21383\n           21391               21397               21401               21407\n           21419               21433               21467               21481\n           21487               21491               21493               21499\n           21503               21517               21521               21523\n           21529               21557               21559               21563\n           21569               21577               21587               21589\n           21599               21601               21611               21613\n           21617               21647               21649               21661\n           21673               21683               21701               21713\n           21727               21737               21739               21751\n           21757               21767               21773               21787\n           21799               21803               21817               21821\n           21839               21841               21851               21859\n           21863               21871               21881               21893\n           21911               21929               21937               21943\n           21961               21977               21991      22000    21997\n           22003               22013               22027               22031\n           22037               22039               22051               22063\n           22067               22073               22079               22091\n           22093               22109               22111               22123\n           22129               22133               22147               22153\n           22157               22159               22171               22189\n           22193               22229               22247               22259\n           22271               22273               22277               22279\n           22283               22291               22303               22307\n           22343               22349               22367               22369\n           22381               22391               22397               22409\n           22433               22441               22447               22453\n           22469               22481               22483               22501\n           22511               22531               22541               22543\n           22549               22567               22571               22573\n           22613               22619               22621               22637\n           22639               22643               22651               22669\n           22679               22691               22697               22699\n           22709               22717               22721               22727\n           22739               22741               22751               22769\n           22777               22783               22787               22807\n           22811               22817               22853               22859\n           22861               22871               22877               22901\n           22907               22921               22937               22943\n           22961               22963               22973      23000    22993\n           23003               23011               23017               23021\n           23027               23029               23039               23041\n           23053               23057               23059               23063\n           23071               23081               23087               23099\n           23117               23131               23143               23159\n           23167               23173               23189               23197\n           23201               23203               23209               23227\n           23251               23269               23279               23291\n           23293               23297               23311               23321\n           23327               23333               23339               23357\n           23369               23371               23399               23417\n           23431               23447               23459               23473\n           23497               23509               23531               23537\n           23539               23549               23557               23561\n           23563               23567               23581               23593\n           23599               23603               23609               23623\n           23627               23629               23633               23663\n           23669               23671               23677               23687\n           23689               23719               23741               23743\n           23747               23753               23761               23767\n           23773               23789               23801               23813\n           23819               23827               23831               23833\n           23857               23869               23873               23879\n           23887               23893               23899               23909\n           23911               23917               23929               23957\n           23971               23977               23981      24000    23993\n           24001               24007               24019               24023\n           24029               24043               24049               24061\n           24071               24077               24083               24091\n           24097               24103               24107               24109\n           24113               24121               24133               24137\n           24151               24169               24179               24181\n           24197               24203               24223               24229\n           24239               24247               24251               24281\n           24317               24329               24337               24359\n           24371               24373               24379               24391\n           24407               24413               24419               24421\n           24439               24443               24469               24473\n           24481               24499               24509               24517\n           24527               24533               24547               24551\n           24571               24593               24611               24623\n           24631               24659               24671               24677\n           24683               24691               24697               24709\n           24733               24749               24763               24767\n           24781               24793               24799               24809\n           24821               24841               24847               24851\n           24859               24877               24889               24907\n           24917               24919               24923               24943\n           24953               24967               24971               24977\n           24979      25000    24989               25013               25031\n           25033               25037               25057               25073\n           25087               25097               25111               25117\n           25121               25127               25147               25153\n           25163               25169               25171               25183\n           25189               25219               25229               25237\n           25243               25247               25253               25261\n           25301               25303               25307               25309\n           25321               25339               25343               25349\n           25357               25367               25373               25391\n           25409               25411               25423               25439\n           25447               25453               25457               25463\n           25469               25471               25523               25537\n           25541               25561               25577               25579\n           25583               25589               25601               25603\n           25609               25621               25633               25639\n           25643               25657               25667               25673\n           25679               25693               25703               25717\n           25733               25741               25747               25759\n           25763               25771               25793               25799\n           25801               25819               25841               25847\n           25849               25867               25873               25889\n           25903               25913               25919               25931\n           25933               25939               25943               25951\n           25969               25981               25997      26000    25999\n           26003               26017               26021               26029\n           26041               26053               26083               26099\n           26107               26111               26113               26119\n           26141               26153               26161               26171\n           26177               26183               26189               26203\n           26209               26227               26237               26249\n           26251               26261               26263               26267\n           26293               26297               26309               26317\n           26321               26339               26347               26357\n           26371               26387               26393               26399\n           26407               26417               26423               26431\n           26437               26449               26459               26479\n           26489               26497               26501               26513\n           26539               26557               26561               26573\n           26591               26597               26627               26633\n           26641               26647               26669               26681\n           26683               26687               26693               26699\n           26701               26711               26713               26717\n           26723               26729               26731               26737\n           26759               26777               26783               26801\n           26813               26821               26833               26839\n           26849               26861               26863               26879\n           26881               26891               26893               26903\n           26921               26927               26947               26951\n           26953               26959               26981               26987\n  27000    26993               27011               27017               27031\n           27043               27059               27061               27067\n           27073               27077               27091               27103\n           27107               27109               27127               27143\n           27179               27191               27197               27211\n           27239               27241               27253               27259\n           27271               27277               27281               27283\n           27299               27329               27337               27361\n           27367               27397               27407               27409\n           27427               27431               27437               27449\n           27457               27479               27481               27487\n           27509               27527               27529               27539\n           27541               27551               27581               27583\n           27611               27617               27631               27647\n           27653               27673               27689               27691\n           27697               27701               27733               27737\n           27739               27743               27749               27751\n           27763               27767               27773               27779\n           27791               27793               27799               27803\n           27809               27817               27823               27827\n           27847               27851               27883               27893\n           27901               27917               27919               27941\n           27943               27947               27953               27961\n           27967               27983      28000    27997               28001\n           28019               28027               28031               28051\n           28057               28069               28081               28087\n           28097               28099               28109               28111\n           28123               28151               28163               28181\n           28183               28201               28211               28219\n           28229               28277               28279               28283\n           28289               28297               28307               28309\n           28319               28349               28351               28387\n           28393               28403               28409               28411\n           28429               28433               28439               28447\n           28463               28477               28493               28499\n           28513               28517               28537               28541\n           28547               28549               28559               28571\n           28573               28579               28591               28597\n           28603               28607               28619               28621\n           28627               28631               28643               28649\n           28657               28661               28663               28669\n           28687               28697               28703               28711\n           28723               28729               28751               28753\n           28759               28771               28789               28793\n           28807               28813               28817               28837\n           28843               28859               28867               28871\n           28879               28901               28909               28921\n           28927               28933               28949               28961\n  29000    28979               29009               29017               29021\n           29023               29027               29033               29059\n           29063               29077               29101               29123\n           29129               29131               29137               29147\n           29153               29167               29173               29179\n           29191               29201               29207               29209\n           29221               29231               29243               29251\n           29269               29287               29297               29303\n           29311               29327               29333               29339\n           29347               29363               29383               29387\n           29389               29399               29401               29411\n           29423               29429               29437               29443\n           29453               29473               29483               29501\n           29527               29531               29537               29567\n           29569               29573               29581               29587\n           29599               29611               29629               29633\n           29641               29663               29669               29671\n           29683               29717               29723               29741\n           29753               29759               29761               29789\n           29803               29819               29833               29837\n           29851               29863               29867               29873\n           29879               29881               29917               29921\n           29927               29947               29959               29983\n  30000    29989               30011               30013               30029\n           30047               30059               30071               30089\n           30091               30097               30103               30109\n           30113               30119               30133               30137\n           30139               30161               30169               30181\n           30187               30197               30203               30211\n           30223               30241               30253               30259\n           30269               30271               30293               30307\n           30313               30319               30323               30341\n           30347               30367               30389               30391\n           30403               30427               30431               30449\n           30467               30469               30491               30493\n           30497               30509               30517               30529\n           30539               30553               30557               30559\n           30577               30593               30631               30637\n           30643               30649               30661               30671\n           30677               30689               30697               30703\n           30707               30713               30727               30757\n           30763               30773               30781               30803\n           30809               30817               30829               30839\n           30841               30851               30853               30859\n           30869               30871               30881               30893\n           30911               30931               30937               30941\n           30949               30971               30977      31000    30983\n           31013               31019               31033               31039\n           31051               31063               31069               31079\n           31081               31091               31121               31123\n           31139               31147               31151               31153\n           31159               31177               31181               31183\n           31189               31193               31219               31223\n           31231               31237               31247               31249\n           31253               31259               31267               31271\n           31277               31307               31319               31321\n           31327               31333               31337               31357\n           31379               31387               31391               31393\n           31397               31469               31477               31481\n           31489               31511               31513               31517\n           31531               31541               31543               31547\n           31567               31573               31583               31601\n           31607               31627               31643               31649\n           31657               31663               31667               31687\n           31699               31721               31723               31727\n           31729               31741               31751               31769\n           31771               31793               31799               31817\n           31847               31849               31859               31873\n           31883               31891               31907               31957\n           31963               31973               31981      32000    31991\n           32003               32009               32027               32029\n           32051               32057               32059               32063\n           32069               32077               32083               32089\n           32099               32117               32119               32141\n           32143               32159               32173               32183\n           32189               32191               32203               32213\n           32233               32237               32251               32257\n           32261               32297               32299               32303\n           32309               32321               32323               32327\n           32341               32353               32359               32363\n           32369               32371               32377               32381\n           32401               32411               32413               32423\n           32429               32441               32443               32467\n           32479               32491               32497               32503\n           32507               32531               32533               32537\n           32561               32563               32569               32573\n           32579               32587               32603               32609\n           32611               32621               32633               32647\n           32653               32687               32693               32707\n           32713               32717               32719               32749\n           32771               32779               32783               32789\n           32797               32801               32803               32831\n           32833               32839               32843               32869\n           32887               32909               32911               32917\n           32933               32939               32941               32957\n           32969               32971               32983               32987\n           32993      33000    32999               33013               33023\n           33029               33037               33049               33053\n           33071               33073               33083               33091\n           33107               33113               33119               33149\n           33151               33161               33179               33181\n           33191               33199               33203               33211\n           33223               33247               33287               33289\n           33301               33311               33317               33329\n           33331               33343               33347               33349\n           33353               33359               33377               33391\n           33403               33409               33413               33427\n           33457               33461               33469               33479\n           33487               33493               33503               33521\n           33529               33533               33547               33563\n           33569               33577               33581               33587\n           33589               33599               33601               33613\n           33617               33619               33623               33629\n           33637               33641               33647               33679\n           33703               33713               33721               33739\n           33749               33751               33757               33767\n           33769               33773               33791               33797\n           33809               33811               33827               33829\n           33851               33857               33863               33871\n           33889               33893               33911               33923\n           33931               33937               33941               33961\n           33967      34000    33997               34019               34031\n           34033               34039               34057               34061\n           34123               34127               34129               34141\n           34147               34157               34159               34171\n           34183               34211               34213               34217\n           34231               34253               34259               34261\n           34267               34273               34283               34297\n           34301               34303               34313               34319\n           34327               34337               34351               34361\n           34367               34369               34381               34403\n           34421               34429               34439               34457\n           34469               34471               34483               34487\n           34499               34501               34511               34513\n           34519               34537               34543               34549\n           34583               34589               34591               34603\n           34607               34613               34631               34649\n           34651               34667               34673               34679\n           34687               34693               34703               34721\n           34729               34739               34747               34757\n           34759               34763               34781               34807\n           34819               34841               34843               34847\n           34849               34871               34877               34883\n           34897               34913               34919               34939\n           34949               34961               34963      35000    34981\n           35023               35027               35051               35053\n           35059               35069               35081               35083\n           35089               35099               35107               35111\n           35117               35129               35141               35149\n           35153               35159               35171               35201\n           35221               35227               35251               35257\n           35267               35279               35281               35291\n           35311               35317               35323               35327\n           35339               35353               35363               35381\n           35393               35401               35407               35419\n           35423               35437               35447               35449\n           35461               35491               35507               35509\n           35521               35527               35531               35533\n           35537               35543               35569               35573\n           35591               35593               35597               35603\n           35617               35671               35677               35729\n           35731               35747               35753               35759\n           35771               35797               35801               35803\n           35809               35831               35837               35839\n           35851               35863               35869               35879\n           35897               35899               35911               35923\n           35933               35951               35963               35969\n           35977               35983               35993      36000    35999\n           36007               36011               36013               36017\n           36037               36061               36067               36073\n           36083               36097               36107               36109\n           36131               36137               36151               36161\n           36187               36191               36209               36217\n           36229               36241               36251               36263\n           36269               36277               36293               36299\n           36307               36313               36319               36341\n           36343               36353               36373               36383\n           36389               36433               36451               36457\n           36467               36469               36473               36479\n           36493               36497               36523               36527\n           36529               36541               36551               36559\n           36563               36571               36583               36587\n           36599               36607               36629               36637\n           36643               36653               36671               36677\n           36683               36691               36697               36709\n           36713               36721               36739               36749\n           36761               36767               36779               36781\n           36787               36791               36793               36809\n           36821               36833               36847               36857\n           36871               36877               36887               36899\n           36901               36913               36919               36923\n           36929               36931               36943               36947\n           36973               36979      37000    36997               37003\n           37013               37019               37021               37039\n           37049               37057               37061               37087\n           37097               37117               37123               37139\n           37159               37171               37181               37189\n           37199               37201               37217               37223\n           37243               37253               37273               37277\n           37307               37309               37313               37321\n           37337               37339               37357               37361\n           37363               37369               37379               37397\n           37409               37423               37441               37447\n           37463               37483               37489               37493\n           37501               37507               37511               37517\n           37529               37537               37547               37549\n           37561               37567               37571               37573\n           37579               37589               37591               37607\n           37619               37633               37643               37649\n           37657               37663               37691               37693\n           37699               37717               37747               37781\n           37783               37799               37811               37813\n           37831               37847               37853               37861\n           37871               37879               37889               37897\n           37907               37951               37957               37963\n           37967               37987               37991               37993\n  38000    37997               38011               38039               38047\n           38053               38069               38083               38113\n           38119               38149               38153               38167\n           38177               38183               38189               38197\n           38201               38219               38231               38237\n           38239               38261               38273               38281\n           38287               38299               38303               38317\n           38321               38327               38329               38333\n           38351               38371               38377               38393\n           38431               38447               38449               38453\n           38459               38461               38501               38543\n           38557               38561               38567               38569\n           38593               38603               38609               38611\n           38629               38639               38651               38653\n           38669               38671               38677               38693\n           38699               38707               38711               38713\n           38723               38729               38737               38747\n           38749               38767               38783               38791\n           38803               38821               38833               38839\n           38851               38861               38867               38873\n           38891               38903               38917               38921\n           38923               38933               38953               38959\n           38971               38977      39000    38993               39019\n           39023               39041               39043               39047\n           39079               39089               39097               39103\n           39107               39113               39119               39133\n           39139               39157               39161               39163\n           39181               39191               39199               39209\n           39217               39227               39229               39233\n           39239               39241               39251               39293\n           39301               39313               39317               39323\n           39341               39343               39359               39367\n           39371               39373               39383               39397\n           39409               39419               39439               39443\n           39451               39461               39499               39503\n           39509               39511               39521               39541\n           39551               39563               39569               39581\n           39607               39619               39623               39631\n           39659               39667               39671               39679\n           39703               39709               39719               39727\n           39733               39749               39761               39769\n           39779               39791               39799               39821\n           39827               39829               39839               39841\n           39847               39857               39863               39869\n           39877               39883               39887               39901\n           39929               39937               39953               39971\n           39979               39983      40000    39989               40009\n           40013               40031               40037               40039\n           40063               40087               40093               40099\n           40111               40123               40127               40129\n           40151               40153               40163               40169\n           40177               40189               40193               40213\n           40231               40237               40241               40253\n           40277               40283               40289               40343\n           40351               40357               40361               40387\n           40423               40427               40429               40433\n           40459               40471               40483               40487\n           40493               40499               40507               40519\n           40529               40531               40543               40559\n           40577               40583               40591               40597\n           40609               40627               40637               40639\n           40693               40697               40699               40709\n           40739               40751               40759               40763\n           40771               40787               40801               40813\n           40819               40823               40829               40841\n           40847               40849               40853               40867\n           40879               40883               40897               40903\n           40927               40933               40939               40949\n           40961               40973      41000    40993               41011\n           41017               41023               41039               41047\n           41051               41057               41077               41081\n           41113               41117               41131               41141\n           41143               41149               41161               41177\n           41179               41183               41189               41201\n           41203               41213               41221               41227\n           41231               41233               41243               41257\n           41263               41269               41281               41299\n           41333               41341               41351               41357\n           41381               41387               41389               41399\n           41411               41413               41443               41453\n           41467               41479               41491               41507\n           41513               41519               41521               41539\n           41543               41549               41579               41593\n           41597               41603               41609               41611\n           41617               41621               41627               41641\n           41647               41651               41659               41669\n           41681               41687               41719               41729\n           41737               41759               41761               41771\n           41777               41801               41809               41813\n           41843               41849               41851               41863\n           41879               41887               41893               41897\n           41903               41911               41927               41941\n           41947               41953               41957               41959\n           41969               41981               41983      42000    41999\n           42013               42017               42019               42023\n           42043               42061               42071               42073\n           42083               42089               42101               42131\n           42139               42157               42169               42179\n           42181               42187               42193               42197\n           42209               42221               42223               42227\n           42239               42257               42281               42283\n           42293               42299               42307               42323\n           42331               42337               42349               42359\n           42373               42379               42391               42397\n           42403               42407               42409               42433\n           42437               42443               42451               42457\n           42461               42463               42467               42473\n           42487               42491               42499               42509\n           42533               42557               42569               42571\n           42577               42589               42611               42641\n           42643               42649               42667               42677\n           42683               42689               42697               42701\n           42703               42709               42719               42727\n           42737               42743               42751               42767\n           42773               42787               42793               42797\n           42821               42829               42839               42841\n           42853               42859               42863               42899\n           42901               42923               42929               42937\n           42943               42953               42961               42967\n           42979      43000    42989               43003               43013\n           43019               43037               43049               43051\n           43063               43067               43093               43103\n           43117               43133               43151               43159\n           43177               43189               43201               43207\n           43223               43237               43261               43271\n           43283               43291               43313               43319\n           43321               43331               43391               43397\n           43399               43403               43411               43427\n           43441               43451               43457               43481\n           43487               43499               43517               43541\n           43543               43573               43577               43579\n           43591               43597               43607               43609\n           43613               43627               43633               43649\n           43651               43661               43669               43691\n           43711               43717               43721               43753\n           43759               43777               43781               43783\n           43787               43789               43793               43801\n           43853               43867               43889               43891\n           43913               43933               43943               43951\n           43961               43963               43969               43973\n           43987               43991      44000    43997               44017\n           44021               44027               44029               44041\n           44053               44059               44071               44087\n           44089               44101               44111               44119\n           44123               44129               44131               44159\n           44171               44179               44189               44201\n           44203               44207               44221               44249\n           44257               44263               44267               44269\n           44273               44279               44281               44293\n           44351               44357               44371               44381\n           44383               44389               44417               44449\n           44453               44483               44491               44497\n           44501               44507               44519               44531\n           44533               44537               44543               44549\n           44563               44579               44587               44617\n           44621               44623               44633               44641\n           44647               44651               44657               44683\n           44687               44699               44701               44711\n           44729               44741               44753               44771\n           44773               44777               44789               44797\n           44809               44819               44839               44843\n           44851               44867               44879               44887\n           44893               44909               44917               44927\n           44939               44953               44959               44963\n           44971               44983      45000    44987               45007\n           45013               45053               45061               45077\n           45083               45119               45121               45127\n           45131               45137               45139               45161\n           45179               45181               45191               45197\n           45233               45247               45259               45263\n           45281               45289               45293               45307\n           45317               45319               45329               45337\n           45341               45343               45361               45377\n           45389               45403               45413               45427\n           45433               45439               45481               45491\n           45497               45503               45523               45533\n           45541               45553               45557               45569\n           45587               45589               45599               45613\n           45631               45641               45659               45667\n           45673               45677               45691               45697\n           45707               45737               45751               45757\n           45763               45767               45779               45817\n           45821               45823               45827               45833\n           45841               45853               45863               45869\n           45887               45893               45943               45949\n           45953               45959               45971               45979\n  46000    45989               46021               46027               46049\n           46051               46061               46073               46091\n           46093               46099               46103               46133\n           46141               46147               46153               46171\n           46181               46183               46187               46199\n           46219               46229               46237               46261\n           46271               46273               46279               46301\n           46307               46309               46327               46337\n           46349               46351               46381               46399\n           46411               46439               46441               46447\n           46451               46457               46471               46477\n           46489               46499               46507               46511\n           46523               46549               46559               46567\n           46573               46589               46591               46601\n           46619               46633               46639               46643\n           46649               46663               46679               46681\n           46687               46691               46703               46723\n           46727               46747               46751               46757\n           46769               46771               46807               46811\n           46817               46819               46829               46831\n           46853               46861               46867               46877\n           46889               46901               46919               46933\n           46957               46993      47000    46997               47017\n           47041               47051               47057               47059\n           47087               47093               47111               47119\n           47123               47129               47137               47143\n           47147               47149               47161               47189\n           47207               47221               47237               47251\n           47269               47279               47287               47293\n           47297               47303               47309               47317\n           47339               47351               47353               47363\n           47381               47387               47389               47407\n           47417               47419               47431               47441\n           47459               47491               47497               47501\n           47507               47513               47521               47527\n           47533               47543               47563               47569\n           47581               47591               47599               47609\n           47623               47629               47639               47653\n           47657               47659               47681               47699\n           47701               47711               47713               47717\n           47737               47741               47743               47777\n           47779               47791               47797               47807\n           47809               47819               47837               47843\n           47857               47869               47881               47903\n           47911               47917               47933               47939\n           47947               47951               47963               47969\n           47977      48000    47981               48017               48023\n           48029               48049               48073               48079\n           48091               48109               48119               48121\n           48131               48157               48163               48179\n           48187               48193               48197               48221\n           48239               48247               48259               48271\n           48281               48299               48311               48313\n           48337               48341               48353               48371\n           48383               48397               48407               48409\n           48413               48437               48449               48463\n           48473               48479               48481               48487\n           48491               48497               48523               48527\n           48533               48539               48541               48563\n           48571               48589               48593               48611\n           48619               48623               48647               48649\n           48661               48673               48677               48679\n           48731               48733               48751               48757\n           48761               48767               48779               48781\n           48787               48799               48809               48817\n           48821               48823               48847               48857\n           48859               48869               48871               48883\n           48889               48907               48947               48953\n           48973               48989      49000    48991               49003\n           49009               49019               49031               49033\n           49037               49043               49057               49069\n           49081               49103               49109               49117\n           49121               49123               49139               49157\n           49169               49171               49177               49193\n           49199               49201               49207               49211\n           49223               49253               49261               49277\n           49279               49297               49307               49331\n           49333               49339               49363               49367\n           49369               49391               49393               49409\n           49411               49417               49429               49433\n           49451               49459               49463               49477\n           49481               49499               49523               49529\n           49531               49537               49547               49549\n           49559               49597               49603               49613\n           49627               49633               49639               49663\n           49667               49669               49681               49697\n           49711               49727               49739               49741\n           49747               49757               49783               49787\n           49789               49801               49807               49811\n           49823               49831               49843               49853\n           49871               49877               49891               49919\n           49921               49927               49937               49939\n           49943               49957               49991               49993\n  50000    49999               50021               50023               50033\n           50047               50051               50053               50069\n           50077               50087               50093               50101\n           50111               50119               50123               50129\n           50131               50147               50153               50159\n           50177               50207               50221               50227\n           50231               50261               50263               50273\n           50287               50291               50311               50321\n           50329               50333               50341               50359\n           50363               50377               50383               50387\n           50411               50417               50423               50441\n           50459               50461               50497               50503\n           50513               50527               50539               50543\n           50549               50551               50581               50587\n           50591               50593               50599               50627\n           50647               50651               50671               50683\n           50707               50723               50741               50753\n           50767               50773               50777               50789\n           50821               50833               50839               50849\n           50857               50867               50873               50891\n           50893               50909               50923               50929\n           50951               50957               50969               50971\n           50989      51000    50993               51001               51031\n           51043               51047               51059               51061\n           51071               51109               51131               51133\n           51137               51151               51157               51169\n           51193               51197               51199               51203\n           51217               51229               51239               51241\n           51257               51263               51283               51287\n           51307               51329               51341               51343\n           51347               51349               51361               51383\n           51407               51413               51419               51421\n           51427               51431               51437               51439\n           51449               51461               51473               51479\n           51481               51487               51503               51511\n           51517               51521               51539               51551\n           51563               51577               51581               51593\n           51599               51607               51613               51631\n           51637               51647               51659               51673\n           51679               51683               51691               51713\n           51719               51721               51749               51767\n           51769               51787               51797               51803\n           51817               51827               51829               51839\n           51853               51859               51869               51871\n           51893               51899               51907               51913\n           51929               51941               51949               51971\n           51973               51977      52000    51991               52009\n           52021               52027               52051               52057\n           52067               52069               52081               52103\n           52121               52127               52147               52153\n           52163               52177               52181               52183\n           52189               52201               52223               52237\n           52249               52253               52259               52267\n           52289               52291               52301               52313\n           52321               52361               52363               52369\n           52379               52387               52391               52433\n           52453               52457               52489               52501\n           52511               52517               52529               52541\n           52543               52553               52561               52567\n           52571               52579               52583               52609\n           52627               52631               52639               52667\n           52673               52691               52697               52709\n           52711               52721               52727               52733\n           52747               52757               52769               52783\n           52807               52813               52817               52837\n           52859               52861               52879               52883\n           52889               52901               52903               52919\n           52937               52951               52957               52963\n           52967               52973               52981      53000    52999\n           53003               53017               53047               53051\n           53069               53077               53087               53089\n           53093               53101               53113               53117\n           53129               53147               53149               53161\n           53171               53173               53189               53197\n           53201               53231               53233               53239\n           53267               53269               53279               53281\n           53299               53309               53323               53327\n           53353               53359               53377               53381\n           53401               53407               53411               53419\n           53437               53441               53453               53479\n           53503               53507               53527               53549\n           53551               53569               53591               53593\n           53597               53609               53611               53617\n           53623               53629               53633               53639\n           53653               53657               53681               53693\n           53699               53717               53719               53731\n           53759               53773               53777               53783\n           53791               53813               53819               53831\n           53849               53857               53861               53881\n           53887               53891               53897               53899\n           53917               53923               53927               53939\n           53951               53959               53987      54000    53993\n           54001               54011               54013               54037\n           54049               54059               54083               54091\n           54101               54121               54133               54139\n           54151               54163               54167               54181\n           54193               54217               54251               54269\n           54277               54287               54293               54311\n           54319               54323               54331               54347\n           54361               54367               54371               54377\n           54401               54403               54409               54413\n           54419               54421               54437               54443\n           54449               54469               54493               54497\n           54499               54503               54517               54521\n           54539               54541               54547               54559\n           54563               54577               54581               54583\n           54601               54617               54623               54629\n           54631               54647               54667               54673\n           54679               54709               54713               54721\n           54727               54751               54767               54773\n           54779               54787               54799               54829\n           54833               54851               54869               54877\n           54881               54907               54917               54919\n           54941               54949               54959               54973\n           54979      55000    54983               55001               55009\n           55021               55049" "/*\n  #’Ìä’Âê’¡§\n  \n\n\n  #’Ê¬’ÀÏ’¡§\n  #’¥ª’¥Ö’¥¸’¥§’¥¯’¥È’¡§\n  \n  #’¾ò’·ï’¡§\n  \n\n  #’Í×’µá’¡§\n  \n\n  #’²ò’Ë¡’¡§\n  \n*/\n\n#include <cstdio>\n#include <cstdlib>\n#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <set>\n#include <map>\n#include <vector>\n#include <list>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n#include <string>\n#include <queue>\n#include <stack>\n#include <numeric>\n#include <bitset>     //UWAGA - w czasie kompilacji musi byc znany rozmiar wektora - nie mozna go zmienic\n#include <cassert>\n#include <iomanip>        //do setprecision\n#include <ctime>\n#include <complex>\nusing namespace std;\n\n#define FOR(i,b,e) for(int i=(b);i<(e);++i)\n#define FORQ(i,b,e) for(int i=(b);i<=(e);++i)\n#define FORD(i,b,e) for(int i=(b)-1;i>=(e);--i)\n#define REP(x, n) for(int x = 0; x < (n); ++x)\n\n#define ST first\n#define ND second\n#define PB push_back\n#define MP make_pair\n#define LL long long\n#define uLL unsigned LL\n#define LD long double\n\nconst double pi = 3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342;\nconst int mod=1000000007;\n\nusing namespace std;\n\ntypedef pair<int, int> point_t;\npoint_t operator+( point_t &lhs, point_t &rhs)\n{\n  point_t p = make_pair(lhs.first + rhs.first, lhs.second + rhs.second);\n  return p;\n}\n\nbool operator==(point_t &lhs, point_t &rhs)\n{\n  return (lhs.first == rhs.first) && (lhs.second == rhs.second);\n}\n\nbool operator!=(point_t &lhs, point_t &rhs)\n{\n  return (lhs.first != rhs.first) || (lhs.second != rhs.second);\n}\n\nbool is_in_field(int row, int col,  point_t &point){\n  const int r = point.first;\n  const int c = point.second;\n  return (1<= c && c<=col) && (1 <= r && r <= row);\n}\n\n\n//r,c\nint main(void){\n  int H,W;\n  int failureFlag=0;\n  cin>>H>>W;\n\n  vector<point_t> moves={MP(-1,0),MP(0,1),MP(1,0),MP(0,-1)};\n  \n  char board[H+3][W+3];\n  FORQ(i,1,H){\n    FORQ(j,1,W){\n      cin>>board[i][j];\n    }\n  }\n\n  \n\n  FORQ(i,1,H){                  // about row\n    FORQ(j,1,W){                // about col\n      if(board[i][j]=='#'){\n        int localSuccessFlag=0;\n        for(auto x:moves){\n          point_t pnt=MP(i,j);\n          pnt=pnt+x;\n          if( board[pnt.first][pnt.second]=='#'   ){\n            localSuccessFlag=1;\n          }\n        }\n        if(localSuccessFlag==0){\n          failureFlag=1;\n          cout<<\"No\"<<endl;\n          return 0;\n        }\n      }\n    }\n  }\n  cout<<\"Yes\"<<endl;\n  return 0;\n}\n\n" "11 11\n...#####...\n.##.....##.\n#..##.##..#\n#..##.##..#\n#.........#\n#...###...#\n.#########.\n.#.#.#.#.#.\n##.#.#.#.##\n..##.#.##..\n.##..#..##.\n" "5 5\n#.#.#\n.#.#.\n#.#.#\n.#.#.\n#.#.#\n" "3 3\n.#.\n###\n.#.\n" "typedef pair<int, int> point_t;\npoint_t operator+( point_t &lhs, point_t &rhs)\n{\n  point_t p = make_pair(lhs.first + rhs.first, lhs.second + rhs.second);\n  return p;\n}\n\nbool operator==(point_t &lhs, point_t &rhs)\n{\n  return (lhs.first == rhs.first) && (lhs.second == rhs.second);\n}\n\nbool operator!=(point_t &lhs, point_t &rhs)\n{\n  return (lhs.first != rhs.first) || (lhs.second != rhs.second);\n}\n\nbool is_in_field(int row, int col,  point_t &point){\n  const int r = point.first;\n  const int c = point.second;\n  return (1<= c && c<=col) && (1 <= r && r <= row);\n}\n" "typedef pair<int, int> point_t;" "" "  vector<point_t> moves={MP(-1,0),MP(0,1),MP(1,0),MP(0,-1)};" "/*\n  #’Ìä’Âê’¡§\n  \n\n\n  #’Ê¬’ÀÏ’¡§\n  #’¥ª’¥Ö’¥¸’¥§’¥¯’¥È’¡§\n  \n  #’¾ò’·ï’¡§\n  \n\n  #’Í×’µá’¡§\n  \n\n  #’²ò’Ë¡’¡§\n  \n*/\n\n#include <cstdio>\n#include <cstdlib>\n#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <set>\n#include <map>\n#include <vector>\n#include <list>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n#include <string>\n#include <queue>\n#include <stack>\n#include <numeric>\n#include <bitset>     //UWAGA - w czasie kompilacji musi byc znany rozmiar wektora - nie mozna go zmienic\n#include <cassert>\n#include <iomanip>        //do setprecision\n#include <ctime>\n#include <complex>\nusing namespace std;\n\n#define FOR(i,b,e) for(int i=(b);i<(e);++i)\n#define FORQ(i,b,e) for(int i=(b);i<=(e);++i)\n#define FORD(i,b,e) for(int i=(b)-1;i>=(e);--i)\n#define REP(x, n) for(int x = 0; x < (n); ++x)\n\n#define ST first\n#define ND second\n#define PB push_back\n#define MP make_pair\n#define LL long long\n#define uLL unsigned LL\n#define LD long double\n\nconst double pi = 3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342;\nconst int mod=1000000007;\n\nusing namespace std;\n\nint main(void){\n  vector<int> A(3);\n  int K;\n  cin>>A[0]>>A[1]>>A[2];\n  cin>>K;\n  \n  sort(A.begin(),A.end());\n  FOR(i,0,K){\n    A[2]=A[2]*2;\n  }\n  cout<<A[0]+A[1]+A[2]<<endl;\n\n  return 0;\n}\n\n" "5 3 11\n1\n" "3 3 4\n2\n" "/*\n  #’Ìä’Âê’¡§\n  \n\n\n  #’Ê¬’ÀÏ’¡§\n  #’¥ª’¥Ö’¥¸’¥§’¥¯’¥È’¡§\n  \n  #’¾ò’·ï’¡§\n  \n\n  #’Í×’µá’¡§\n  \n\n  #’²ò’Ë¡’¡§\n  \n*/\n\n#include <cstdio>\n#include <cstdlib>\n#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <set>\n#include <map>\n#include <vector>\n#include <list>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n#include <string>\n#include <queue>\n#include <stack>\n#include <numeric>\n#include <bitset>     //UWAGA - w czasie kompilacji musi byc znany rozmiar wektora - nie mozna go zmienic\n#include <cassert>\n#include <iomanip>        //do setprecision\n#include <ctime>\n#include <complex>\nusing namespace std;\n\n#define FOR(i,b,e) for(int i=(b);i<(e);++i)\n#define FORQ(i,b,e) for(int i=(b);i<=(e);++i)\n#define FORD(i,b,e) for(int i=(b)-1;i>=(e);--i)\n#define REP(x, n) for(int x = 0; x < (n); ++x)\n\n#define ST first\n#define ND second\n#define PB push_back\n#define MP make_pair\n#define LL long long\n#define uLL unsigned LL\n#define LD long double\n\nconst double pi = 3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342;\nconst int mod=1000000007;\n\nusing namespace std;\n\nint main(void){\n  int a,b;\n  cin>>a>>b;\n\n  if(b>=a){\n    cout<<a<<endl;\n  }else{\n    cout<<a-1<<endl;\n  }\n  \n  return 0;\n}\n\n" "11 30\n" "2 1\n" "5 5\n" "candidate template ignored: could not match 'basic_ostream' against\n      'basic_istream'" "    for(auto x: v) cout<<x<<\" \"<<endl;               // v’¤Î’Í×’ÁÇ’¤ò’É½’¼¨" "template<typename FI>\nvoid parted_rotate(FI first1, FI last1, FI first2, FI last2)\n{\n if(first1 == last1 || first2 == last2) return;\n FI next = first2;\n while (first1 != next) {\n  std::iter_swap(first1++, next++);\n  if(first1 == last1) first1 = first2;\n  if (next == last2) {\n   next = first2;\n  } else if (first1 == first2) {\n   first2 = next;\n  }\n }\n}\n \ntemplate<typename BI>\nbool next_combination_imp(BI first1, BI last1, BI first2, BI last2)\n{\n if(first1 == last1 || first2 == last2) return false;\n auto target = last1; --target;\n auto last_elem = last2; --last_elem;\n // find right-most incrementable element: target\n while(target != first1 && !(*target < *last_elem)) --target;\n if(target == first1 && !(*target < *last_elem)) {\n  parted_rotate(first1, last1, first2, last2);\n  return false;\n }\n // find the next value to be incremented: *next\n auto next = first2;\n while(!(*target < *next)) ++next;\n std::iter_swap(target++, next++);\n parted_rotate(target, last1, next, last2);\n return true;\n}\n \n// INVARIANT: is_sorted(first, mid) && is_sorted(mid, last)\ntemplate<typename BI>\ninline bool next_combination(BI first, BI mid, BI last)\n{\n return next_combination_imp(first, mid, mid, last);\n}\n \n// INVARIANT: is_sorted(first, mid) && is_sorted(mid, last)\ntemplate<typename BI>\ninline bool prev_combination(BI first, BI mid, BI last)\n{\n return next_combination_imp(mid, last, first, mid);\n}" "// possible implementation introduced at http://en.cppreference.com/w/cpp/algorithm/rotate with slight modification to handle parted ranges\ntemplate<typename FI>\nvoid parted_rotate(FI first1, FI last1, FI first2, FI last2)\n{\n if(first1 == last1 || first2 == last2) return;\n FI next = first2;\n while (first1 != next) {\n  std::iter_swap(first1++, next++);\n  if(first1 == last1) first1 = first2;\n  if (next == last2) {\n   next = first2;\n  } else if (first1 == first2) {\n   first2 = next;\n  }\n }\n}\n \ntemplate<typename BI>\nbool next_combination_imp(BI first1, BI last1, BI first2, BI last2)\n{\n if(first1 == last1 || first2 == last2) return false;\n auto target = last1; --target;\n auto last_elem = last2; --last_elem;\n // find right-most incrementable element: target\n while(target != first1 && !(*target < *last_elem)) --target;\n if(target == first1 && !(*target < *last_elem)) {\n  parted_rotate(first1, last1, first2, last2);\n  return false;\n }\n // find the next value to be incremented: *next\n auto next = first2;\n while(!(*target < *next)) ++next;\n std::iter_swap(target++, next++);\n parted_rotate(target, last1, next, last2);\n return true;\n}\n \n// INVARIANT: is_sorted(first, mid) && is_sorted(mid, last)\ntemplate<typename BI>\ninline bool next_combination(BI first, BI mid, BI last)\n{\n return next_combination_imp(first, mid, mid, last);\n}\n \n// INVARIANT: is_sorted(first, mid) && is_sorted(mid, last)\ntemplate<typename BI>\ninline bool prev_combination(BI first, BI mid, BI last)\n{\n return next_combination_imp(mid, last, first, mid);\n}" "’¡Ö’¿ô’Îóa_1, a_2.   a_n+1’¡×" "  int sum=0;" "  cout<<\"i:\"<<i<<endl;" "  //int i;" "  cout<<4i<<endl;" "3 3\n1 2\n1 3\n2 3\n" "succesflag" "          failureflag=1;" "    i++;" "    if(v[0])                    // v[0]’¤Èv[1]’¤ò’Èæ’³Ó’¡¥’°ì’ÈÌ’¤Ëv[i]’¤Èv[i+1]’¤ò’Èæ’³Ó’¡¥" "      if(graph[v[i]][j]=)" "#include <numeric>" "use of undeclared identifier 'iota'" "-std=c++14" "permutation2.cpp:43:3: error: 'iota' was not declared in this scope" "  vector<int> graph[1050];\n  FOR(i,0,N){\n    int a,b;\n    cin>>a>>b;\n    graph[a].push_back(b);\n    graph[b].push_back(a);\n  }\n" "vector<int> graph[1050];" "vector<int> graph2[1050];" "  vector<int> graph[1050];" "  for()" "#include <vector>\n#include <iostream>\n\nusing namespace std;\n\nostream& operator<<(ostream& ost, const vector<int>& v)\n{\nfor (int i = 0; i < v.size(); ++i) {\nost << v[i] << ' ';\n}\nreturn ost;\n}\n\nint main()\n{\nvector<int> u;\nvector<vector<int> > v;\n\nfor (int i = 0; i < 5; ++i) {\nu.push_back(i);\n}\nv.push_back(u);\n\nfor (int i = 0; i < 5; ++i) {\nu.push_back(i * i);\n}\nv.push_back(u);\n\nfor (int i = 0; i < v.size(); ++i) {\ncout << v[i] << endl;\n}\n\nreturn 0;\n}" "#include <cstdio>\n#include <cstdlib>\n#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <set>\n#include <map>\n#include <vector>\n#include <list>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n#include <string>\n#include <queue>\n#include <bitset>     //UWAGA - w czasie kompilacji musi byc znany rozmiar wektora - nie mozna go zmienic\n#include <cassert>\n#include <iomanip>        //do setprecision\n#include <ctime>\n#include <complex>\nusing namespace std;\n\n#define FOR(i,b,e) for(int i=(b);i<(e);++i)\n#define FORQ(i,b,e) for(int i=(b);i<=(e);++i)\n#define FORD(i,b,e) for(int i=(b)-1;i>=(e);--i)\n#define REP(x, n) for(int x = 0; x < (n); ++x)\n\n#define ST first\n#define ND second\n#define PB push_back\n#define MP make_pair\n#define LL long long\n#define uLL unsigned LL\n#define LD long double\n\nconst double pi = 3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342;\nconst int mod=1000000007;\n\nusing namespace std;\n\nint main(void){\n  int N;\n  cin>>N;\n\n  vector<int> X(N+1);\n  FORQ(i,1,N){\n    cin>>X[i];\n  }\n\n  vector<int> Y(N);\n  FORQ(i,0,N-1){\n    Y[i]=X[i+1];\n  }\n\n  sort(Y.begin(),Y.end());\n\n  vector<int> A(N+1);\n  FORQ(i,1,N){\n    A[i]=Y[i-1];\n  }\n\n  int l1,l2;\n  l1=A[N/2];\n  l2=A[N/2+1];\n\n  FORQ(i,1,N){\n    if(X[i]>=l2){\n      cout<<l1<<endl;\n    }else if(X[i]<=l1){\n      cout<<l2<<endl;\n    }\n  }\n  return 0;\n}\n\n" "6\n5 5 4 4 3 3\n" "4\n2 4 4 3\n" "#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nconst int MAX_N=2*1e5+4;\n\nint x[MAX_N],s[MAX_N];\n\nint main(){\n  int n;\n  cin>>n;\n  for(int i=0;i<n;i++){\n    cin>>x[i];\n    s[i]=x[i];\n  }\n  sort(s,s+n);\n  int l1=s[n/2-1],l2=s[n/2];\n  for(int i=0;i<n;i++){\n   if(l1==l2)cout<<l1<<endl;\n   else if(x[i]<l2)cout<<l2<<endl;\n   else cout<<l1<<endl;\n  }\n}\n		" "  sort(a,a+N);" "4\n2 4 4 3\n" "\n\n/*\n  #’Ìä’Âê’¡§\n  \n  #’Ê¬’ÀÏ’¡§\n  #’¥ª’¥Ö’¥¸’¥§’¥¯’¥È’¡§\n  \n  \n  #’¾ò’·ï’¡§\n  \n  \n  #’Í×’µá’¡§\n  \n  \n  #’²ò’Ë¡’¡§\n  \n  \n*/\n\n\n\n#include <cstdio>\n#include <cstdlib>\n#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <set>\n#include <map>\n#include <vector>\n#include <list>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n#include <string>\n#include <queue>\n#include <stack>\n#include <bitset>     //UWAGA - w czasie kompilacji musi byc znany rozmiar wektora - nie mozna go zmienic\n#include <cassert>\n#include <iomanip>        //do setprecision\n#include <ctime>\n#include <complex>\nusing namespace std;\n\n#define FOR(i,b,e) for(int i=(b);i<(e);++i)\n#define FORQ(i,b,e) for(int i=(b);i<=(e);++i)\n#define FORD(i,b,e) for(int i=(b)-1;i>=(e);--i)\n#define REP(x, n) for(int x = 0; x < (n); ++x)\n\n#define ST first\n#define ND second\n#define PB push_back\n#define MP make_pair\n#define LL long long\n#define uLL unsigned LL\n#define LD long double\n\nconst double pi = 3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342;\nconst int mod=1000000007;\n\nusing namespace std;\n\ntypedef pair<int, int> point_t;\npoint_t operator+( point_t &lhs, point_t &rhs)\n{\n  point_t p = make_pair(lhs.first + rhs.first, lhs.second + rhs.second);\n  return p;\n}\n\nbool operator==(point_t &lhs, point_t &rhs)\n{\n  return (lhs.first == rhs.first) && (lhs.second == rhs.second);\n}\n\nbool operator!=(point_t &lhs, point_t &rhs)\n{\n  return (lhs.first != rhs.first) || (lhs.second != rhs.second);\n}\n\nbool is_in_field(int row, int col,  point_t &point){\n  const int r = point.first;\n  const int c = point.second;\n  return (1<= c && c<=col) && (1 <= r && r <= row);\n}\n\n\nint main(void){\n  int R,C;\n  cin>>R>>C;\n\n  vector< vector<char> > meiro(R+3,vector<char>(C+3,'0'));\n  vector< vector<int> > memo(R+3,vector<int>(C+3,mod));\n\n  point_t start,goal;\n  FORQ(i,1,R){\n    FORQ(j,1,C){\n      cin>>meiro[i][j];\n      if(meiro[i][j]=='s'){\n        start=MP(i,j);\n      }else if(meiro[i][j]=='g'){\n        goal=MP(i,j);\n      }\n    }\n  }\n  vector<point_t> moves={MP(-1,0),MP(0,1),MP(1,0),MP(0,-1)};\n\n  std::stack<point_t> stk;\n  stk.push(start);\n  memo[start.ST][start.ND]=0;\n\n  while(!stk.empty()){\n    point_t cur =  stk.top(); stk.pop();\n    for(auto x: moves){\n      point_t next = cur + x;\n      if(is_in_field(R,C,next)) {\n        if(meiro[next.ST][next.ND]!='#' && memo[next.ST][next.ND]==mod) {\n          stk.push(next);\n          memo[next.ST][next.ND] =0;\n          if(next==goal) {\n            cout<<\"Yes\"<<endl;\n            return 0;\n          }\n        }\n      }\n    }\n    \n  }\n  \n  cout<<\"No\"<<endl;\n  return 0; \n}\n" "#include <cstdio>\n#include <cstdlib>\n#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <set>\n#include <map>\n#include <vector>\n#include <list>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n#include <string>\n#include <queue>\n#include <bitset>     //UWAGA - w czasie kompilacji musi byc znany rozmiar wektora - nie mozna go zmienic\n#include <cassert>\n#include <iomanip>        //do setprecision\n#include <ctime>\n#include <complex>\nusing namespace std;\n\n#define FOR(i,b,e) for(int i=(b);i<(e);++i)\n#define FORQ(i,b,e) for(int i=(b);i<=(e);++i)\n#define FORD(i,b,e) for(int i=(b)-1;i>=(e);--i)\n#define REP(x, n) for(int x = 0; x < (n); ++x)\n\n#define ST first\n#define ND second\n#define PB push_back\n#define MP make_pair\n#define LL long long\n#define uLL unsigned LL\n#define LD long double\n\nconst double pi = 3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342;\nconst int mod=1000000007;\n\nusing namespace std;\n\ntypedef pair<int, int> point_t;\npoint_t operator+( point_t &lhs, point_t &rhs)\n{\n  point_t p = make_pair(lhs.first + rhs.first, lhs.second + rhs.second);\n  return p;\n}\n\nbool operator==(point_t &lhs, point_t &rhs)\n{\n  return (lhs.first == rhs.first) && (lhs.second == rhs.second);\n}\n\nbool operator!=(point_t &lhs, point_t &rhs)\n{\n  return (lhs.first != rhs.first) || (lhs.second != rhs.second);\n}\n\nbool is_in_field(int row, int col,  point_t &point){\n  const int r = point.first;\n  const int c = point.second;\n  return (1<= c && c<=col) && (1 <= r && r <= row);\n}\n\n\nint main(void){\n  int R,C;\n  cin>>R>>C;\n\n  vector< vector<char> > meiro(R+3,vector<char>(C+3,'0'));\n  vector< vector<int> > memo(R+3,vector<int>(C+3,mod));\n\n  point_t start,goal;\n  FORQ(i,1,R){\n    FORQ(j,1,C){\n      cin>>meiro[i][j];\n      if(meiro[i][j]=='s'){\n        start=MP(i,j);\n      }else if(meiro[i][j]=='g'){\n        goal=MP(i,j);\n      }\n    }\n  }\n  vector<point_t> moves={MP(-1,0),MP(0,1),MP(1,0),MP(0,-1)};\n\n  std::stack<point_t> stk;\n  stk.push(start);\n  memo[start.ST][start.ND]=0;\n\n  while(!stk.empty()){\n    point_t cur =  stk.top(); stk.pop();\n    for(auto x: moves){\n      next = cur + x;\n      if(is_in_field(R,C,next)) {\n        if(meiro[next.ST][next.ND]!='#' && memo[next.ST][next.ND]==mod) {\n          stk.push(next);\n          memo[next.ST][next.ND] =0;\n          if(next==goal) {\n            cout<<\"Yes\"<<endl;\n            return 0;\n          }\n        }\n      }\n    }\n    \n  }\n  \n  cout<<\"No\"<<endl;\n  return 0; \n}\n" " 'stack' is not a member of 'std'" "point_t start,goal;\n  FORQ(i,1,R){\n    FORQ(jx" "\n\n/*\n  #’Ìä’Âê’¡§\n  \n  #’Ê¬’ÀÏ’¡§\n  #’¥ª’¥Ö’¥¸’¥§’¥¯’¥È’¡§\n  \n  \n  #’¾ò’·ï’¡§\n  \n  \n  #’Í×’µá’¡§\n  \n  \n  #’²ò’Ë¡’¡§\n  \n  \n*/\n\n\n\n#include <cstdio>\n#include <cstdlib>\n#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <set>\n#include <map>\n#include <vector>\n#include <list>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n#include <string>\n#include <queue>\n#include <bitset>     //UWAGA - w czasie kompilacji musi byc znany rozmiar wektora - nie mozna go zmienic\n#include <cassert>\n#include <iomanip>        //do setprecision\n#include <ctime>\n#include <complex>\nusing namespace std;\n\n#define FOR(i,b,e) for(int i=(b);i<(e);++i)\n#define FORQ(i,b,e) for(int i=(b);i<=(e);++i)\n#define FORD(i,b,e) for(int i=(b)-1;i>=(e);--i)\n#define REP(x, n) for(int x = 0; x < (n); ++x)\n\n#define ST first\n#define ND second\n#define PB push_back\n#define MP make_pair\n#define LL long long\n#define uLL unsigned LL\n#define LD long double\n\nconst double pi = 3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342;\nconst int mod=1000000007;\n\nusing namespace std;\n\ntypedef pair<int, int> point_t;\npoint_t operator+( point_t &lhs, point_t &rhs)\n{\n  point_t p = make_pair(lhs.first + rhs.first, lhs.second + rhs.second);\n  return p;\n}\n\nbool operator==(point_t &lhs, point_t &rhs)\n{\n  return (lhs.first == rhs.first) && (lhs.second == rhs.second);\n}\n\nbool operator!=(point_t &lhs, point_t &rhs)\n{\n  return (lhs.first != rhs.first) || (lhs.second != rhs.second);\n}\n\nbool is_in_field(int row, int col,  point_t &point){\n  const int r = point.first;\n  const int c = point.second;\n  return (1<= c && c<=col) && (1 <= r && r <= row);\n}\n\n\nint main(void){\n  int R,C;\n  cin>>R>>C;\n\n  vector< vector<char> > meiro(R+3,vector<char>(C+3,'0'));\n  vector< vector<int> > memo(R+3,vector<int>(C+3,mod));\n\n  point_t start,goal;\n  FORQ(i,1,R){\n    FORQ(i,1,C){\n      cin>>meiro[i][j];\n      if(meiro[i][j]=='s'){\n        start=MP(i,j);\n      }else if(meiro[i][j]=='g'){\n        goal=MP(i,j);\n      }\n    }\n  }\n  vector<point_t> moves={MP(-1,0),MP(0,1),MP(1,0),MP(0,-1)};\n\n  stack<point_t> stk;\n  stk.push(start);\n  memo[start.ST][start.ND]==0;\n\n  while(!stk.empty()){\n    point_t cur =  stk.top(); stk.pop();\n    for(auto x: moves){\n      next = cur + x;\n      if(is_in_field(R,C,next)){\n        if(meiro[next.ST][meiro.ND]!='#' && memo[next.ST][meiro.ND]==mod){\n          stk.push(next);\n          memo[next.ST][meiro.ND] =0;\n          if(next==goal){\n            cout<<\"Yes\"<<endl;\n            return 0;\n          }\n        }\n      }\n    }\n    \n  }\n  \n  cout<<\"No\"<<endl;\n  return 0; \n}\n" "meiro[next.ST][meiro.ND]" "  point_t start=make_pair(sy,sx);\n  point_t goal =make_pair(gy,gx);\n" "\n\n/*\n  #’Ìä’Âê’¡§\n  \n  #’Ê¬’ÀÏ’¡§\n  #’¥ª’¥Ö’¥¸’¥§’¥¯’¥È’¡§\n  \n  \n  #’¾ò’·ï’¡§\n  \n  \n  #’Í×’µá’¡§\n  \n  \n  #’²ò’Ë¡’¡§\n  ’¡Ê’¥Õ’¥£’¡¼’¥ë’¥É’¤¬’Í¿’¤¨’¤é’¤ì’¤ë’¡¥’½é’´ü’¾õ’ÂÖ’¤¬’Í¿’¤¨’¤é’¤ì’¤ë’¡¥’¡Ë\n  1. ’¥­’¥å’¡¼’¤ò’ÍÑ’°Õ’¤¹’¤ë’¡¥’¡Ö’¥á’¥â’¥°’¥é’¥Õ’¡×’¤ò’ÍÑ’°Õ’¤¹’¤ë’¡¥’¡Ê’¥¹’¥¿’¡¼’¥È’ÃÏ’ÅÀ’¤ò’¥­’¥å’¡¼’¤Ë’Æþ’¤ì’¤ë’¡Ë\n\n  2. loop1\n   ’¥­’¥å’¡¼’¤«’¤é’¡Ö’¸½’ºß’¤Î’¾ì’½ê’¡×’¤ò’¼è’¤ê’½Ð’¤¹\n\n  3. loop2\n   3.1 ’¡Ö’¼¡’¤Î’¾ì’½ê’¡×’¤¬’¡¤\n   		1) ’¥Õ’¥£’¡¼’¥ë’¥É’Æâ’¤Ç\n            2) ’°Ü’Æ°’²Ä’Ç½’¤Ê’¥Þ’¥¹’¤Ç\n            3) ’°Ü’Æ°’¤·’¤¿’¤³’¤È’¤¬’¤Ê’¤¤’¾ì’½ê’¤Ê’¤é’¤Ð\n       ’¤ò’¡Ö’Ãµ’º÷’¡×’¤¹’¤ë’¡¥\n\n    3.2 ’¡Ö’Ãµ’º÷’¡×’¤·’¤¿’¾ì’½ê’¤Î’¡¤’¡Ö’¥á’¥â’¥°’¥é’¥Õ’¤Î’¡Ö’¼¡’¤Î’¾ì’½ê’¡×’¤Ë’Áê’Åö’¤¹’¤ë’¾ì’½ê’¡×’¤Ë’¡Ö’¥á’¥â’¥°’¥é’¥Õ’¤Î’¡Ö’¸½’ºß’¤Î’¾ì’½ê’¡×’¤Ë’Áê’Åö’¤¹’¤ë’¾ì’½ê’¤Ë’³Ê’Ç¼’¤µ’¤ì’¤Æ’¤¤’¤ë’ÃÍ’¡×’¤Ë1’¤ò’²Ã’¤¨’¤¿’ÃÍ’¤ò’µ­’Ï¿’¤¹’¤ë’¡¥\n  3 end loop2\n\n  2 end loop1\n*/\n\n\n\n#include <cstdio>\n#include <cstdlib>\n#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <set>\n#include <map>\n#include <vector>\n#include <list>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n#include <string>\n#include <queue>\n#include <bitset>     //UWAGA - w czasie kompilacji musi byc znany rozmiar wektora - nie mozna go zmienic\n#include <cassert>\n#include <iomanip>        //do setprecision\n#include <ctime>\n#include <complex>\nusing namespace std;\n\n#define FOR(i,b,e) for(int i=(b);i<(e);++i)\n#define FORQ(i,b,e) for(int i=(b);i<=(e);++i)\n#define FORD(i,b,e) for(int i=(b)-1;i>=(e);--i)\n#define REP(x, n) for(int x = 0; x < (n); ++x)\n\n#define ST first\n#define ND second\n#define PB push_back\n#define MP make_pair\n#define LL long long\n#define uLL unsigned LL\n#define LD long double\n\nconst double pi = 3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342;\nconst int mod=1000000007;\n\nusing namespace std;\n\ntypedef pair<int, int> point_t;\npoint_t operator+( point_t &lhs, point_t &rhs)\n{\n  point_t p = make_pair(lhs.first + rhs.first, lhs.second + rhs.second);\n  return p;\n}\n\nbool operator==(point_t &lhs, point_t &rhs)\n{\n  return (lhs.first == rhs.first) && (lhs.second == rhs.second);\n}\n\nbool operator!=(point_t &lhs, point_t &rhs)\n{\n  return (lhs.first != rhs.first) || (lhs.second != rhs.second);\n}\n\nbool is_in_field(int row, int col,  point_t &point){\n  const int c = point.second;\n  const int r = point.first;\n  return (1<= c && c<=col) && (1 <= r && r <= row);\n}\n\n\n\n\nint main(void){\n  int R,C;\n  cin>>R>>C;\n\n  int sy,sx,gy,gx;\n  cin>>sy>>sx;\n  cin>>gy>>gx;\n  point_t start=make_pair(sy,sx);\n  point_t goal =make_pair(gy,gx);\n  \n  vector< vector<char> > meiro(R+3,vector<char>(C+3,'0'));\n  vector< vector<int> > memo(R+3,vector<int>(C+3,mod));\n\n  FORQ(i,1,R){\n    FORQ(j,1,C){\n      cin>>meiro[i][j];\n    }\n  }\n  \n  vector<point_t> moves{MP(-1,0),MP(0,1),MP(1,0),MP(0,-1)};\n\n  queue<point_t> que;\n  que.push(start);\n  memo[start.ST][start.ND]=0;\n  \n  while(!que.empty()){\n    point_t cur=que.front();  que.pop();\n    // cout<<\"debug: cur.ST: \"<<cur.ST<<endl;\n    // cout<<\"debug: cur.ND: \"<<cur.ND<<endl;\n    for(auto x: moves) {\n      point_t next = cur+x;\n      // cout<<\"debug: next.ST: \"<<next.ST<<endl;\n      if(is_in_field(R,C,next)){\n        // cout<<\"is_in_field(R,C,next): \"<<is_in_field(R,C,next)<<endl;\n        if(meiro[next.ST][next.ND]=='.' && memo[next.ST][next.ND]==mod){\n          que.push(next);\n          // cout<<\"an element has been added to the queue\"<<endl;\n          memo[next.ST][next.ND]=memo[cur.ST][cur.ND]+1;\n          // cout<<\"debug : memo[next.ST][next.ND]: \"<<memo[next.ST][next.ND]<<endl;\n          if(next==goal){\n            cout<<memo[next.ST][next.ND]<<endl;\n            return 0;\n          }\n        }\n      }\n    }\n  }\n\n  cout<<\"an error has occured\"<<endl;\n  return -1; \n}\n" "5 8\n2 2\n2 4\n########\n#.#....#\n#.###..#\n#......#\n########\n" "50 50\n2 2\n49 49\n##################################################\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n#................................................#\n##################################################\n" "cout<<\"debug: cur.ST: \"<<cur.ST<<endl;"))
(setq kill-ring-yank-pointer (nthcdr 0 kill-ring))

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 208
  "/Users/freedom/.emacs.d/init.el"
  "init.el"
  'emacs-lisp-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  3118
  '(8190 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix))
  '((mark-ring (1 4411 14 12905))))

(desktop-create-buffer 208
  "/Users/freedom/coder/typical/001_A.cpp"
  "001_A.cpp"
  'c++-mode
  '(abbrev-mode override-global-mode company-mode irony-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  2
  '(1077 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix))
  '((mark-ring (1077 2002 2001 17 2592 2243 346 2062 2381 2421 2354 935 1607 2109 2403 2336))))

(desktop-create-buffer 208
  "/Users/freedom/coder/20180505/D.cpp"
  "D.cpp"
  'c++-mode
  '(abbrev-mode override-global-mode company-mode irony-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  1183
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix))
  '((mark-ring nil)))

(desktop-create-buffer 208
  "/Users/freedom/coder/20180505/C.cpp"
  "C.cpp"
  'c++-mode
  '(abbrev-mode override-global-mode company-mode irony-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  1
  '(2381 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix))
  '((mark-ring (2316 168 2365 1083 1716 1 1964 2296))))

(desktop-create-buffer 208
  "/Users/freedom/WOJ/takehara/k7.cpp"
  "k7.cpp"
  'c++-mode
  '(abbrev-mode override-global-mode company-mode irony-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  1034
  '(1 nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-dos))
  '((mark-ring (993 1))))

(desktop-create-buffer 208
  "/Users/freedom/coder/rensyu_vector.cpp"
  "rensyu_vector.cpp"
  'c++-mode
  '(abbrev-mode override-global-mode company-mode irony-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  11
  '(1753 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix))
  '((mark-ring (834 1283 1313 1467 1680 1594 1389 1345 1506 1752 1 1256 1109 1201 1751 1749))))

(desktop-create-buffer 208
  "/Users/freedom/WOJ/kadai13.cpp"
  "kadai13.cpp"
  'c++-mode
  '(abbrev-mode override-global-mode company-mode irony-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  2063
  '(1002 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix))
  '((mark-ring (476 479 2351 969 1276 1667 1707))))

(desktop-create-buffer 208
  "/Users/freedom/coder/20180407/D.cpp"
  "D.cpp"
  'c++-mode
  '(abbrev-mode override-global-mode company-mode irony-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  1
  '(1414 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix))
  '((mark-ring (11 1230 15 1619 1405 1379 1377 1271 1270 1269 1660 1720 1774 4 33 1789))))

(desktop-create-buffer 208
  "/Users/freedom/coder/20180505/B.cpp"
  "B.cpp"
  'c++-mode
  '(abbrev-mode override-global-mode company-mode irony-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  1
  '(1274 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix))
  '((mark-ring (1127 1098))))

(desktop-create-buffer 208
  "/Users/freedom/coder/20180505/A.cpp"
  "A.cpp"
  'c++-mode
  '(abbrev-mode override-global-mode company-mode irony-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  1
  '(1207 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix))
  '((mark-ring (1177 1 1206))))

(desktop-create-buffer 208
  "/Users/freedom/coder/D/D_11.cpp"
  "D_11.cpp"
  'c++-mode
  '(abbrev-mode override-global-mode company-mode irony-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  3020
  '(2983 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix))
  '((mark-ring (3034 2872 2901 1407 1267 2857 1 2830 524 66 35 1036 212 226 2891 3029))))

(desktop-create-buffer 208
  "/Users/freedom/coder/007_C2.cpp"
  "007_C2.cpp"
  'c++-mode
  '(abbrev-mode override-global-mode company-mode irony-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  2614
  '(3299 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix))
  '((mark-ring (1029 1950 2111 3243 2549 2503 2262 2771 2766 2727 2615 2644 2499 3022 2872 2643))))

(desktop-create-buffer 208
  "/Users/freedom/MyPrograms/permutation2.cpp"
  "permutation2.cpp"
  'c++-mode
  '(abbrev-mode override-global-mode company-mode irony-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  973
  '(1180 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix))
  '((mark-ring (269 1052 1 1201 473 456))))

(desktop-create-buffer 208
  nil
  "D"
  'dired-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode yas-minor-mode)
  235
  '(nil nil)
  t
  '("/Users/freedom/coder/D/")
  nil
  '((mark-ring nil)))

(desktop-create-buffer 208
  "/Users/freedom/MyPrograms/input.txt"
  "input.txt"
  'text-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  1
  '(1 nil)
  nil
  nil
  nil
  '((mark-ring nil)))

(desktop-create-buffer 208
  "/Users/freedom/MyPrograms/AdjacentList2.cpp"
  "AdjacentList2.cpp"
  'c++-mode
  '(abbrev-mode override-global-mode company-mode irony-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  1077
  '(1262 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix))
  '((mark-ring (1063 992 1017 1 1372 1262 1307 803 990 991 1262 1262))))

(desktop-create-buffer 208
  "/Users/freedom/MyPrograms/AdjacentList.cpp"
  "AdjacentList.cpp"
  'c++-mode
  '(abbrev-mode override-global-mode company-mode irony-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  416
  '(498 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix))
  '((mark-ring (202 1 203 498 408 483))))

(desktop-create-buffer 208
  "/Users/freedom/coder/C/One_Stroke_Path.cpp"
  "One_Stroke_Path.cpp"
  'c++-mode
  '(abbrev-mode override-global-mode company-mode irony-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  1527
  '(1353 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix))
  '((mark-ring (1152 1880 1598 1523 1793 1 916 1353 1126 1170 576 84 1254 1295 84 1354))))

(desktop-create-buffer 208
  "/Users/freedom/coder/C/Many_Medians.cpp"
  "Many_Medians.cpp"
  'c++-mode
  '(abbrev-mode override-global-mode company-mode irony-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  1128
  '(129 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix))
  '((mark-ring (1341 1398 1119 1 97 1510 1510 308 1101 1508 1506 1118))))

(desktop-create-buffer 208
  "/Users/freedom/coder/C/2D_Plane_2N_Points.cpp"
  "2D_Plane_2N_Points.cpp"
  'c++-mode
  '(abbrev-mode override-global-mode company-mode irony-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  1215
  '(124 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix))
  '((mark-ring (106 1216 33 22 107 107))))

(desktop-create-buffer 208
  nil
  "20180407"
  'dired-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode yas-minor-mode)
  416
  '(1 nil)
  t
  '("/Users/freedom/coder/20180407/")
  nil
  '((mark-ring nil)))

(desktop-create-buffer 208
  nil
  "C"
  'dired-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode yas-minor-mode)
  428
  '(575 nil)
  t
  '("/Users/freedom/coder/C/")
  nil
  '((mark-ring (575))))

(desktop-create-buffer 208
  "/Users/freedom/coder/20180407/D3.cpp"
  "D3.cpp"
  'c++-mode
  '(abbrev-mode override-global-mode company-mode irony-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  1
  '(1181 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix))
  '((mark-ring (1241 1 1726 1385 1515 1663 1566 1567 1617 1676 1047 1799 1158 1316 1038 1688))))

(desktop-create-buffer 208
  "/Users/freedom/coder/20180407/C4.cpp"
  "C4.cpp"
  'c++-mode
  '(abbrev-mode override-global-mode company-mode irony-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  1407
  '(290 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix))
  '((mark-ring (361 1418 111 1 342 104 314 291 274 1404 290))))

(desktop-create-buffer 208
  "/Users/freedom/coder/20180407/C3.cpp"
  "C3.cpp"
  'c++-mode
  '(abbrev-mode override-global-mode company-mode irony-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  72
  '(1 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix))
  '((mark-ring (1267 1269 1137 1083 1138 1045 1072 1249 1106 1265 1161 1185 509))))

(desktop-create-buffer 208
  "/Users/freedom/coder/20180407/C2.cpp"
  "C2.cpp"
  'c++-mode
  '(abbrev-mode override-global-mode company-mode irony-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  1573
  '(705 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix))
  '((mark-ring (3340 2756 1916 176 147 1837 3311 2796 1889 1433 669 459 518 277 505 458))))

(desktop-create-buffer 208
  nil
  "*info*"
  'Info-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  1491432
  '(1 nil)
  t
  '("/Applications/Emacs.app/Contents/Resources/info/emacs" "Easy Customization" ((history ("dir" "Top" 5207) ("dir" "Top" 227) ("dir" "Top" 173) ("dir" "Top" 173) ("dir" "Top" 227) ("dir" "Top" 227) ("/Applications/Emacs.app/Contents/Resources/info/emacs" "Top" 1702) ("/Applications/Emacs.app/Contents/Resources/info/emacs" "Easy Customization" 1491350) ("/Applications/Emacs.app/Contents/Resources/info/emacs" "Easy Customization" 1491350))))
  '((tab-width . 8) (buffer-file-coding-system . utf-8-unix) (case-fold-search . t))
  '((mark-ring nil)))

(desktop-create-buffer 208
  nil
  "*info*<2>"
  'Info-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  227
  '(nil nil)
  t
  '("dir" "Top" ((history ("/Applications/Emacs.app/Contents/Resources/info/emacs" "Top" 1702) ("/Applications/Emacs.app/Contents/Resources/info/emacs" "Easy Customization" 1491350) ("/Applications/Emacs.app/Contents/Resources/info/emacs" "Easy Customization" 1491350))))
  '((tab-width . 8) (buffer-file-coding-system . utf-8-unix) (case-fold-search . t))
  '((mark-ring nil)))

(desktop-create-buffer 208
  nil
  "*info*<3>"
  'Info-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  227
  '(nil nil)
  t
  '("dir" "Top" ((history ("dir" "Top" 227) ("dir" "Top" 227) ("/Applications/Emacs.app/Contents/Resources/info/emacs" "Top" 1702) ("/Applications/Emacs.app/Contents/Resources/info/emacs" "Easy Customization" 1491350) ("/Applications/Emacs.app/Contents/Resources/info/emacs" "Easy Customization" 1491350))))
  '((tab-width . 8) (buffer-file-coding-system . utf-8-unix) (case-fold-search . t))
  '((mark-ring nil)))

(desktop-create-buffer 208
  nil
  "*info*<4>"
  'Info-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  227
  '(nil nil)
  t
  '("dir" "Top" ((history ("dir" "Top" 227) ("dir" "Top" 173) ("dir" "Top" 173) ("dir" "Top" 227) ("dir" "Top" 227) ("/Applications/Emacs.app/Contents/Resources/info/emacs" "Top" 1702) ("/Applications/Emacs.app/Contents/Resources/info/emacs" "Easy Customization" 1491350) ("/Applications/Emacs.app/Contents/Resources/info/emacs" "Easy Customization" 1491350))))
  '((tab-width . 8) (buffer-file-coding-system . utf-8-unix) (case-fold-search . t))
  '((mark-ring nil)))

