;; -*- mode: emacs-lisp; coding: emacs-mule; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Fri Oct 12 20:32:56 2018
;; Desktop file format version 208
;; Emacs version 25.3.1

;; Global section:
(setq desktop-saved-frameset [frameset 1 (23488 34408 607904 0) (desktop . "208") "freedom@freedoms-MacBook-Air.local" nil nil ((((font-backend mac-ct) (fontsize . 0) (font . "-*-Menlo-normal-normal-normal-*-12-*-*-*-m-0-iso10646-1") (border-width . 0) (internal-border-width . 2) (vertical-scroll-bars . right) (horizontal-scroll-bars) (foreground-color . "gray80") (background-color . "#181a26") (line-spacing) (left-fringe . 8) (right-fringe . 8) (menu-bar-lines . 0) (tool-bar-lines . 0) (title) (icon-type) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 15) (scroll-bar-height . 0) (alpha) (fullscreen) (display-type . color) (background-mode . dark) (cursor-color . "green") (environment) (powerline-cache) (frameset--id . "109B-727E-848D-A280") (frameset--mini t . t) (modeline . t) (minibuffer . t) (unsplittable) (right-divider-width . 0) (bottom-divider-width . 0) (icon-name) (visibility . t) (display . "freedoms-MacBook-Air.local") (explicit-name) (tool-bar-position . top) (height . 36) (width . 80) (left . 811) (top . 51)) ((min-height . 4) (min-width . 10) (min-height-ignore . 4) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 56) (min-pixel-width . 70) (min-pixel-height-ignore . 56) (min-pixel-width-ignore . 56) (min-pixel-height-safe . 14) (min-pixel-width-safe . 14)) leaf (pixel-width . 591) (pixel-height . 490) (total-width . 84) (total-height . 35) (normal-height . 1.0) (normal-width . 1.0) (buffer "*helm-mode-kill-buffer*" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 1) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 14) (start . 1))))])
(setq desktop-missing-file-warning nil)
(setq tags-file-name nil)
(setq tags-table-list nil)
(setq search-ring '("jpg" "N" "48" "4800" "log" "subl" "dired" "rotate" "genrand_int32" "mt" "genrand_real3" "mt" "init_genrand" "rand" "rand_exp" "uniform"))
(setq regexp-search-ring nil)
(setq register-alist (list (desktop-list* 51 (let ((mk (make-marker))) (add-hook 'desktop-delay-hook `(lambda nil (set-marker ,mk ,nil (get-buffer ," *temp*")))) mk))))
(setq file-name-history '("~/Documents/4_zenki/’¥×’¥í’¥°’¥é’¥ß’¥ó’¥°B/kadai4/thesis.tex" "~/.bashrc" "~/.emacs.d/init.el" "~/Documents/4_zenki/’¥×’¥í’¥°’¥é’¥ß’¥ó’¥°B/kadai4/log_naive.txt" "~/Documents/4_zenki/’¥×’¥í’¥°’¥é’¥ß’¥ó’¥°B/kadai4/rotate2048.c" "~/Documents/4_zenki/’¥×’¥í’¥°’¥é’¥ß’¥ó’¥°B/kadai4/rotate1024.c" "~/Documents/4_zenki/’¥×’¥í’¥°’¥é’¥ß’¥ó’¥°B/kadai4/rotate512.c" "~/Documents/4_zenki/’¥×’¥í’¥°’¥é’¥ß’¥ó’¥°B/kadai4/rotate.c" "~/Documents/4_zenki/’¥×’¥í’¥°’¥é’¥ß’¥ó’¥°B/kadai4/rotate256.c" "~/Documents/4_zenki/’¥×’¥í’¥°’¥é’¥ß’¥ó’¥°B/kadai4/rotate128.c" "~/Documents/4_zenki/’¥×’¥í’¥°’¥é’¥ß’¥ó’¥°B/kadai4/rotate256.c" "~/Documents/4_zenki/’¥×’¥í’¥°’¥é’¥ß’¥ó’¥°B/kadai4/rotate512.c" "~/Documents/4_zenki/’¥×’¥í’¥°’¥é’¥ß’¥ó’¥°B/kadai4/rotate256.c" "~/Documents/4_zenki/’¥×’¥í’¥°’¥é’¥ß’¥ó’¥°B/kadai4/rotate128.c" "~/Documents/4_zenki/’³Î’Î¨’Åý’·×’³µ’ÏÀ/kadai2/1_1.cpp" "~/Documents/4_zenki/’³Î’Î¨’Åý’·×’³µ’ÏÀ/kadai2/1_0.cpp" "~/Documents/4_zenki/’³Î’Î¨’Åý’·×’³µ’ÏÀ/kadai2/thesis.tex" "~/test/test.cpp" "~/test/testprob.cpp" "~/test/test.co" "~/Documents/4_zenki/OS_A/OS_kadai_thesis/chapter1.tex" "~/Documents/4_zenki/OS_A/OS_kadai_thesis/thesis.tex" "~/Documents/4_zenki/’¥½’¥Õ’¹©/kadai_sofk2/thesis.tex" "~/Documents/4_zenki/’¥½’¥Õ’¹©/kadai3/thesis.tex" "~/Documents/4_zenki/’¥½’¥Õ’¹©/kadai2/thesis.tex" "~/Documents/4_zenki/’¥½’¥Õ’¹©/kadai_sofK/thesis.tex" "~/coder/typical/001_A.cpp" "~/MyPrograms/input.txt" "~/WOJ/kadai13forSubm.cpp" "~/WOJ/kadai13forSubm2.cpp" "~/WOJ/kadai13forSubm2" "~/coder/Minesweeper2.cpp" "~/coder/Minesweeper3.cpp" "~/coder/Minesweeper4.cpp" "~/coder/20180407/A.cpp" "~/WOJ/kadai13.cpp" "~/coder/TwoColorsCardGame2.cpp~" "~/coder/hinamatsuri.cpp" "~/coder/LucasNumber.cpp" "~/.emacs.d/mysnippets/c++-mode/prtf.cpp" "~/coder/SomeSums.cpp"))
(setq kill-ring '("\n" "graph.jpg" " 64  \n 128 \n 256 \n 512 \n 1024\n2048 " "0.057050000\n0.000142000\n0.000568000\n0.002538000\n0.011728000\n0.048705000\n" "0.000047000\n0.000232000\n0.001458000\n0.006685000\n0.034440000\n0.140904000\n" "057050000\n000142000\n000568000\n002538000\n011728000\n048705000" "\\begin{table}[htbp]\n \\begin{center}\n  \\label{table:  }\n  \\caption{’¹â’Â®’²½’¤ò’¹Ô’¤ï’¤Ê’¤«’¤Ã’¤¿’¾ì’¹ç’¤Î’½è’Íý’»þ’´Ö}\n  \\begin{tabular}{c|c}\n   \\hline\n   N    & ’½è’Íý’»þ’´Ö’¡Ênano sec’¡Ë \\\\\n   \\hline\n   64   &   000047000  \\\\\n   128  &   000232000  \\\\\n   256  &   001458000  \\\\\n   512  &   006685000  \\\\\n   1024 &   034440000  \\\\\n  2048  &   140904000  \\\\\n   \\hline\n  \\end{tabular}\n \\end{center}\n\\end{table}" "   \\hline" "000047000\n000232000\n001458000\n006685000\n034440000\n140904000" "Time Precision:	0.000001000" "Time Precision:	0.000001000" "Time Precision:	0.000001000" "Time Precision:	0.000001000" "Time Precision:	0.000001000" "Time Preci" "sion:	0.000001000" "Time Precision:	0.000001000" "Time Precision:	0.000001000" "Time Precision:	0.000001000" "Time Precision:	0.000001000" "Time Precision:	0.000001000" "Time Precision:	0.000001000\nTime Span:	0.057050000\nTime Precision:	0.000001000\nTime Span:	0.000142000\nTime Precision:	0.000001000\nTime Span:	0.000568000\nTime Precision:	0.000001000\nTime Span:	0.002538000\nTime Precision:	0.000001000\nTime Span:	0.011728000\nTime Precision:	0.000001000\nTime Span:	0.048705000\n" "Time Precision:	0.000001000\nTime Span:	0.000047000\nTime Precision:	0.000001000\nTime Span:	0.000232000\nTime Precision:	0.000001000\nTime Span:	0.001458000\nTime Precision:	0.000001000\nTime Span:	0.006685000\nTime Precision:	0.000001000\nTime Span:	0.034440000\nTime Precision:	0.000001000\nTime Span:	0.140904000\n" "" "47000" "47000" "log_optimized.jpg" "log_naive.jpg" "Time Precision:	0.000001000\nTime Span:	0.000047000\nTime Precision:	0.000001000\nTime Span:	0.000232000\nTime Precision:	0.000001000\nTime Span:	0.001458000\nTime Precision:	0.000001000\nTime Span:	0.006685000\nTime Precision:	0.000001000\nTime Span:	0.034440000\nTime Precision:	0.000001000\nTime Span:	0.140904000" "log_optimized.txt" "’¾å’¤«’¤é’½ç’¤Ë’¡¤N=64,128,256,512,1024,2048’¤Î’¾ì’¹ç’¤ò’É½’¤¹’¡¥" "log_naive.txt" " \\lstinputlisting{parts/}" "rotate_optimized2048.c" "\\begin{figure}[H]\n \\centering \n \\lstinputlisting{parts/}\n \\caption{figure:}\n \\label{figure:}\n\\end{figure}" "\\begin{figure}[H]\n \\centering \n \\lstinputlisting{parts/}\n \\caption{figure:}\n \\label{figure:}\n\\end{figure}" "\\lstinputlisting{parts/}" ";;; ’¥¹’¥¯’¥í’¡¼’¥ë’¤ò’°ì’¹Ô’¤º’¤Ä’¤Ë’¤¹’¤ë\n(setq scroll-step 1)" "Time Precision:	0.000001000\nTime Span:	0.057050000\nTime Precision:	0.000001000\nTime Span:	0.000142000\nTime Precision:	0.000001000\nTime Span:	0.000568000\nTime Precision:	0.000001000\nTime Span:	0.002538000\nTime Precision:	0.000001000\nTime Span:	0.011728000\nTime Precision:	0.000001000\nTime Span:	0.048705000" "optimized" "dst[n-1-j][i] = src[i][j];" "void rotate(int n, int src[n][n], int dst[n][n]){\n  int i,j;\n  int limit =n/8*8;\n  \n  for(i=0;i<limit;i=i+8){\n    \n    \n    for(j=0;j<n;j=j+8){\n      //1\n      dst[n-1-j][i] = src[i][j];\n      dst[n-1-j+1][i] = src[i][j+1];\n      dst[n-1-j+2][i] = src[i][j+2];\n      dst[n-1-j+3][i] = src[i][j+3];\n      dst[n-1-j+4][i] = src[i][j+4];\n      dst[n-1-j+5][i] = src[i][j+5];\n      dst[n-1-j+6][i] = src[i][j+6];\n      dst[n-1-j+7][i] = src[i][j+7];\n\n\n      //2\n      dst[n-1-j][i+1] = src[i+1][j];\n      dst[n-1-j+1][i+1] = src[i+1][j+1];\n      dst[n-1-j+2][i+1] = src[i+1][j+2];\n      dst[n-1-j+3][i+1] = src[i+1][j+3];\n      dst[n-1-j+4][i+1] = src[i+1][j+4];\n      dst[n-1-j+5][i+1] = src[i+1][j+5];\n      dst[n-1-j+6][i+1] = src[i+1][j+6];\n      dst[n-1-j+7][i+1] = src[i+1][j+7];\n\n      \n      //3\n      dst[n-1-j][i+2] = src[i+2][j];\n      dst[n-1-j+1][i+2] = src[i+2][j+1];\n      dst[n-1-j+2][i+2] = src[i+2][j+2];\n      dst[n-1-j+3][i+2] = src[i+2][j+3];\n      dst[n-1-j+4][i+2] = src[i+2][j+4];\n      dst[n-1-j+5][i+2] = src[i+2][j+5];\n      dst[n-1-j+6][i+2] = src[i+2][j+6];\n      dst[n-1-j+7][i+2] = src[i+2][j+7];\n\n\n      //4\n      dst[n-1-j][i+3] = src[i+3][j];\n      dst[n-1-j+1][i+3] = src[i+3][j+1];\n      dst[n-1-j+2][i+3] = src[i+3][j+2];\n      dst[n-1-j+3][i+3] = src[i+3][j+3];\n      dst[n-1-j+4][i+3] = src[i+3][j+4];\n      dst[n-1-j+5][i+3] = src[i+3][j+5];\n      dst[n-1-j+6][i+3] = src[i+3][j+6];\n      dst[n-1-j+7][i+3] = src[i+3][j+7];\n\n\n      //5\n      dst[n-1-j][i+4] = src[i+4][j];\n      dst[n-1-j+1][i+4] = src[i+4][j+1];\n      dst[n-1-j+2][i+4] = src[i+4][j+2];\n      dst[n-1-j+3][i+4] = src[i+4][j+3];\n      dst[n-1-j+4][i+4] = src[i+4][j+4];\n      dst[n-1-j+5][i+4] = src[i+4][j+5];\n      dst[n-1-j+6][i+4] = src[i+4][j+6];\n      dst[n-1-j+7][i+4] = src[i+4][j+7];\n\n\n      //6\n      dst[n-1-j][i+5] = src[i+5][j];\n      dst[n-1-j+1][i+5] = src[i+5][j+1];\n      dst[n-1-j+2][i+5] = src[i+5][j+2];\n      dst[n-1-j+3][i+5] = src[i+5][j+3];\n      dst[n-1-j+4][i+5] = src[i+5][j+4];\n      dst[n-1-j+5][i+5] = src[i+5][j+5];\n      dst[n-1-j+6][i+5] = src[i+5][j+6];\n      dst[n-1-j+7][i+5] = src[i+5][j+7];\n\n\n      //7\n      dst[n-1-j][i+6] = src[i+6][j];\n      dst[n-1-j+1][i+6] = src[i+6][j+1];\n      dst[n-1-j+2][i+6] = src[i+6][j+2];\n      dst[n-1-j+3][i+6] = src[i+6][j+3];\n      dst[n-1-j+4][i+6] = src[i+6][j+4];\n      dst[n-1-j+5][i+6] = src[i+6][j+5];\n      dst[n-1-j+6][i+6] = src[i+6][j+6];\n      dst[n-1-j+7][i+6] = src[i+6][j+7];\n\n      //8\n      dst[n-1-j][i+7] = src[i+7][j];\n      dst[n-1-j+1][i+7] = src[i+7][j+1];\n      dst[n-1-j+2][i+7] = src[i+7][j+2];\n      dst[n-1-j+3][i+7] = src[i+7][j+3];\n      dst[n-1-j+4][i+7] = src[i+7][j+4];\n      dst[n-1-j+5][i+7] = src[i+7][j+5];\n      dst[n-1-j+6][i+7] = src[i+7][j+6];\n      dst[n-1-j+7][i+7] = src[i+7][j+7];\n      \n    }\n  }\n" "      dst[n-1-j][i] = src[i][j];\n      dst[n-1-j+1][i] = src[i][j+1];\n      dst[n-1-j+2][i] = src[i][j+2];\n      dst[n-1-j+3][i] = src[i][j+3];\n      dst[n-1-j+4][i] = src[i][j+4];\n      dst[n-1-j+5][i] = src[i][j+5];\n      dst[n-1-j+6][i] = src[i][j+6];\n      dst[n-1-j+7][i] = src[i][j+7];\n" "dst[n-1-j][i] = src[i][j]; \ndst[n-1-j][i] = src[i][j+1];\ndst[n-1-j][i] = src[i][j+2];\ndst[n-1-j][i] = src[i][j+3];\ndst[n-1-j][i] = src[i][j+4];\ndst[n-1-j][i] = src[i][j+5];\ndst[n-1-j][i] = src[i][j+6];\ndst[n-1-j][i] = src[i][j+7];" "      dst[n-1-j][i] = src[i][j+8];" "dst[n-1-j][i] = src[i][j+7];" "" "#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n#include <sys/time.h>\n\n#define N 64\n\nint src[N][N];\nint dst[N][N];\n\nvoid rotate(int SIZE, int src[SIZE][SIZE], int dest[SIZE][SIZE]);\n\nint main(void){\n\n  \n  struct timespec res,tp1,tp2;\n  long sec,nsec;\n\n  // ’»þ’¹ï’Àº’ÅÙ’¤Î’³Î’Ç§\n  clock_getres(CLOCK_REALTIME,&res);\n  //Time Precision ’¤Î’½Ð’ÎÏ\n  printf(\"Time Precision:\\t%ld.%09ld\\n\", (long)res.tv_sec, res.tv_nsec);\n\n  //’Â¬’Äê’³«’»Ï\n  clock_gettime(CLOCK_REALTIME,&tp1);\n\n  // ’½è’Íý’»þ’´Ö’¤ò’·×’Â¬’¤·’¤¿’¤¤’¥³’¡¼’¥É’¤ò’¤³’¤³’¤Ë’µ­’½Ò\n  // ’¡Ê’³«’»Ï’¡Ë\n  rotate(N,src,dst);\n  // ’½ª’Î»\n  clock_gettime(CLOCK_REALTIME,&tp2);\n\n  sec = tp2.tv_sec - tp1.tv_sec;\n  nsec = tp2.tv_nsec - tp1.tv_nsec;\n\n  if(nsec < 0){\n    sec--;\n    nsec += 1000000000L;\n  }\n  //Time Span ’¤Î’½Ð’ÎÏ\n  printf(\"Time Span:\\t%ld.%09ld\\n\",sec,nsec);\n  return 0;\n}\n\n\nvoid rotate(int n, int src[n][n], int dst[n][n]){\n  int i,j;\n  for(i=0;i<n;i++){\n    for(j=0;j<n;j++){\n      dst[n-1-j][i] = src[i][j];\n    }\n  }\n\n}\n" "dst[n-1-j][i] = src[i][j];" "#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n#include <sys/time.h>\n\n#define N 64\n\nint src[N][N];\nint dst[N][N];\n\nvoid rotate(int SIZE, int src[SIZE][SIZE], int dest[SIZE][SIZE]);\n\nint main(void){\n\n  \n  struct timespec res,tp1,tp2;\n  long sec,nsec;\n\n  // ’»þ’¹ï’Àº’ÅÙ’¤Î’³Î’Ç§\n  clock_getres(CLOCK_REALTIME,&res);\n  //Time Precision ’¤Î’½Ð’ÎÏ\n  printf(\"Time Precision:\\t%ld.%09ld\\n\", (long)res.tv_sec, res.tv_nsec);\n\n  //’Â¬’Äê’³«’»Ï\n  clock_gettime(CLOCK_REALTIME,&tp1);\n\n  // ’½è’Íý’»þ’´Ö’¤ò’·×’Â¬’¤·’¤¿’¤¤’¥³’¡¼’¥É’¤ò’¤³’¤³’¤Ë’µ­’½Ò\n  // ’¡Ê’³«’»Ï’¡Ë\n  rotate(N,src,dst);\n  // ’½ª’Î»\n  clock_gettime(CLOCK_REALTIME,&tp2);\n\n  sec = tp2.tv_sec - tp1.tv_sec;\n  nsec = tp2.tv_nsec - tp1.tv_nsec;\n\n  if(nsec < 0){\n    sec--;\n    nsec += 1000000000L;\n  }\n  //Time Span ’¤Î’½Ð’ÎÏ\n  printf(\"Time Span:\\t%ld.%09ld\\n\",sec,nsec);\n  return 0;\n}\n\n\nvoid rotate(int n, int src[n][n], int dst[n][n]){\n  int i,j;\n  for(i=0;i<n;i++){\n    for(j=0;j<n;j++){\n      dst[n-1-j][i] = src[i][j];\n    }\n  }\n\n}\n" "gcc rotate2048.c\n./a.out         " "eval-after-load \"dired\"\n  '(progn\n     (define-key dired-mode-map \"F\" 'my-dired-find-file)\n     (defun my-dired-find-file (&optional arg)\n       \"Open each of the marked files, or the file under the point, or when prefix arg, the next N files \"\n       (interactive \"P\")\n       (let* ((fn-list (dired-get-marked-files nil arg)))\n         (mapc 'find-file fn-list)))))" "  printf(\"Time Span2:\\t %ld . %09ld \\n\",sec, nsec);" "  printf(\"Time Span2:\\t %ld . %09ld \\n\",sec, nsec);" "bash-4.4$ gcc rotate.c\nbash-4.4$ ./a.out\nTime Precision:	0.000001000\nTime Span:	0.000068000\nTime Span2:	 0 . 000068000 \nbash-4.4$ gcc rotate128.c\nbash-4.4$ ./a.out\nTime Precision:	0.000001000\nTime Span:	0.000266000\nTime Span2:	 0 . 000266000 \nbash-4.4$ gcc rotate256.c \nbash-4.4$ ./a.out\nTime Precision:	0.000001000\nTime Span:	0.001103000\nTime Span2:	 0 . 001103000 \nbash-4.4$ gcc rotate512.c \nbash-4.4$ ./a.out\nTime Precision:	0.000001000\nTime Span:	0.006736000\nTime Span2:	 0 . 006736000 \nbash-4.4$ gcc rotate1024.c \nbash-4.4$ ./a.out\nTime Precision:	0.000001000\nTime Span:	0.035994000\nTime Span2:	 0 . 035994000 \nbash-4.4$ gcc rotate2048.c \nbash-4.4$ ./a.out\nTime Precision:	0.000001000\nTime Span:	0.163950000\nTime Span2:	 0 . 163950000 \n" "#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n#include <sys/time.h>\n\n#define N 64\n\nint src[N][N];\nint dst[N][N];\n\nvoid rotate(int SIZE, int src[SIZE][SIZE], int dest[SIZE][SIZE]);\n\nint main(void){\n\n  \n  struct timespec res,tp1,tp2;\n  long sec,nsec;\n\n  // ’»þ’¹ï’Àº’ÅÙ’¤Î’³Î’Ç§\n  clock_getres(CLOCK_REALTIME,&res);\n  //Time Precision ’¤Î’½Ð’ÎÏ\n  printf(\"Time Precision:\\t%ld.%09ld\\n\", (long)res.tv_sec, res.tv_nsec);\n\n  //’Â¬’Äê’³«’»Ï\n  clock_gettime(CLOCK_REALTIME,&tp1);\n\n  // ’½è’Íý’»þ’´Ö’¤ò’·×’Â¬’¤·’¤¿’¤¤’¥³’¡¼’¥É’¤ò’¤³’¤³’¤Ë’µ­’½Ò\n  // ’¡Ê’³«’»Ï’¡Ë\n  rotate(N,src,dst);\n  // ’½ª’Î»\n  clock_gettime(CLOCK_REALTIME,&tp2);\n\n  sec = tp2.tv_sec - tp1.tv_sec;\n  nsec = tp2.tv_nsec - tp1.tv_nsec;\n\n  if(nsec < 0){\n    sec--;\n    nsec += 1000000000L;\n  }\n  //Time Span ’¤Î’½Ð’ÎÏ\n  printf(\"Time Span:\\t%ld.%09ld\\n\",sec,nsec);\n  printf(\"Time Span2:\\t %ld . %09ld \\n\",sec, nsec);\n  return 0;\n}\n\n\nvoid rotate(int n, int src[n][n], int dst[n][n]){\n  int i,j;\n  for(i=0;i<n;i++){\n    for(j=0;j<n;j++){\n      dst[n-1-j][i] = src[i][j];\n    }\n  }\n\n}\n" "  rotate(N,src,dst);" "  struct timespec res,tp1,tp2;\n  long sec,nsec;\n\n  // ’»þ’¹ï’Àº’ÅÙ’¤Î’³Î’Ç§\n  clock_getres(CLOCK_REALTIME,&res);\n\n  \n  //Time Precision ’¤Î’½Ð’ÎÏ\n  printf(\"Time Precision:\\t%ld.%09ld\\n\", (long)res.tv_sec, res.tv_nsec);\n\n\n  \n  clock_gettime(CLOCK_REALTIME,&tp1);\n\n  // ’½è’Íý’»þ’´Ö’¤ò’·×’Â¬’¤·’¤¿’¤¤’¥³’¡¼’¥É’¤ò’¤³’¤³’¤Ë’µ­’½Ò\n  // ’³«’»Ï\n  usleep(100000);\n  // ’½ª’Î»\n\n  clock_gettime(CLOCK_REALTIME,&tp2);\n\n  sec = tp2.tv_sec - tp1.tv_sec;\n  nsec = tp2.tv_nsec - tp1.tv_nsec;\n\n  if(nsec < 0){\n    sec--;\n    nsec += 1000000000L;\n  }\n  //Time Span ’¤Î’½Ð’ÎÏ\n  printf(\"Time Span:\\t%ld.%09ld\\n\",sec,nsec);\n  printf(\"Time Span2:\\t %ld . %09ld \\n\",sec, nsec);\n  return 0;" "#include <stdio.h>\n#include <time.h>\n#include <unistd.h>\n\nint main(){\n  struct timespec res,tp1,tp2;\n  long sec,nsec;\n\n  // ’»þ’¹ï’Àº’ÅÙ’¤Î’³Î’Ç§\n  if(clock_getres(CLOCK_REALTIME,&res) < 0){\n    perror(\"clock_getres\");\n    return 1;\n  }\n\n  \n  //Time Precision ’¤Î’½Ð’ÎÏ\n  printf(\"Time Precision:\\t%ld.%09ld\\n\", (long)res.tv_sec, res.tv_nsec);\n\n\n  \n  if(clock_gettime(CLOCK_REALTIME,&tp1) < 0){\n    perror(\"clock_gettime begin\");\n    return 2;\n  }\n\n  // ’½è’Íý’»þ’´Ö’¤ò’·×’Â¬’¤·’¤¿’¤¤’¥³’¡¼’¥É’¤ò’¤³’¤³’¤Ë’µ­’½Ò\n  // ’³«’»Ï\n  usleep(100000);\n  // ’½ª’Î»\n\n  if(clock_gettime(CLOCK_REALTIME,&tp2) < 0){\n    perror(\"clock_gettime end\");\n    return 3;\n  }\n  sec = tp2.tv_sec - tp1.tv_sec;\n  nsec = tp2.tv_nsec - tp1.tv_nsec;\n  if(nsec < 0){\n    sec--;\n    nsec += 1000000000L;\n  }\n  printf(\"Time Span:\\t%ld.%09ld\\n\",sec,nsec);\n  return 0;\n}\n" "#include <stdio.h>\n#include <time.h>\n#include <unistd.h>\n\nint main(){\n  struct timespec res,tp1,tp2;\n  long sec,nsec;\n\n  // ’»þ’¹ï’Àº’ÅÙ’¤Î’³Î’Ç§\n  if(clock_getres(CLOCK_REALTIME,&res) < 0){\n    perror(\"clock_getres\");\n    return 1;\n  }\n  printf(\"Time Precision:\\t%ld.%09ld\\n\", (long)res.tv_sec, res.tv_nsec);\n\n  if(clock_gettime(CLOCK_REALTIME,&tp1) < 0){\n    perror(\"clock_gettime begin\");\n    return 2;\n  }\n\n  // ’½è’Íý’»þ’´Ö’¤ò’·×’Â¬’¤·’¤¿’¤¤’¥³’¡¼’¥É’¤ò’¤³’¤³’¤Ë’µ­’½Ò\n  // ’³«’»Ï\n  usleep(100000);\n  // ’½ª’Î»\n\n  if(clock_gettime(CLOCK_REALTIME,&tp2) < 0){\n    perror(\"clock_gettime end\");\n    return 3;\n  }\n  sec = tp2.tv_sec - tp1.tv_sec;\n  nsec = tp2.tv_nsec - tp1.tv_nsec;\n  if(nsec < 0){\n    sec--;\n    nsec += 1000000000L;\n  }\n  printf(\"Time Span:\\t%ld.%09ld\\n\",sec,nsec);\n  return 0;\n}"))
(setq kill-ring-yank-pointer (nthcdr 0 kill-ring))

;; Buffer section -- buffers listed in same order as in buffer list:
