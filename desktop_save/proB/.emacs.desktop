;; -*- mode: emacs-lisp; coding: emacs-mule; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Mon May 21 13:16:00 2018
;; Desktop file format version 208
;; Emacs version 25.3.1

;; Global section:
(setq desktop-saved-frameset [frameset 1 (23298 18432 551850 0) (desktop . "208") "freedom@freedoms-MacBook-Air.local" nil nil ((((font-backend mac-ct) (fontsize . 0) (font . "-*-Menlo-normal-normal-normal-*-12-*-*-*-m-0-iso10646-1") (border-width . 0) (internal-border-width . 2) (vertical-scroll-bars . right) (horizontal-scroll-bars) (foreground-color . "gray80") (background-color . "#181a26") (line-spacing) (left-fringe . 8) (right-fringe . 8) (menu-bar-lines . 0) (tool-bar-lines . 0) (title) (icon-type) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 15) (scroll-bar-height . 0) (alpha) (fullscreen) (display-type . color) (background-mode . dark) (cursor-color . "green") (powerline-cache) (frameset--id . "D590-5F59-E48C-C5A7") (frameset--mini t) (height . 36) (width . 79) (modeline . t) (minibuffer . t) (unsplittable) (left . 0) (top . 23) (right-divider-width . 0) (bottom-divider-width . 0) (icon-name) (visibility . t) (display . "freedoms-MacBook-Air.local") (explicit-name) (tool-bar-position . top)) ((min-height . 8) (min-width . 10) (min-height-ignore . 8) (min-width-ignore . 9) (min-height-safe . 2) (min-width-safe . 2) (min-pixel-height . 112) (min-pixel-width . 70) (min-pixel-height-ignore . 112) (min-pixel-width-ignore . 63) (min-pixel-height-safe . 28) (min-pixel-width-safe . 14)) vc (pixel-width . 584) (pixel-height . 490) (total-width . 83) (total-height . 35) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 584) (pixel-height . 350) (total-width . 83) (total-height . 25) (normal-height . 0.7058823529411764) (normal-width . 1.0) (buffer "6_takehara.cpp" (selected) (hscroll . 0) (fringes 8 8 nil) (margins 1) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 127) (start . 1))) (leaf (last . t) (pixel-width . 584) (pixel-height . 140) (total-width . 83) (total-height . 10) (normal-height . 0.29411764705882354) (normal-width . 1.0) (buffer "*YaTeX-typesetting*" (selected) (hscroll . 0) (fringes 8 8 nil) (margins 2) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 4381) (start . 4318)))) (((font-backend mac-ct) (fontsize . 0) (font . "-*-Menlo-normal-normal-normal-*-12-*-*-*-m-0-iso10646-1") (border-width . 0) (internal-border-width . 2) (vertical-scroll-bars . right) (horizontal-scroll-bars) (foreground-color . "gray80") (background-color . "#181a26") (line-spacing) (left-fringe . 8) (right-fringe . 8) (menu-bar-lines . 0) (tool-bar-lines . 0) (title) (icon-type) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 15) (scroll-bar-height . 0) (alpha) (fullscreen) (display-type . color) (background-mode . dark) (cursor-color . "green") (environment) (powerline-cache) (frameset--id . "2BF7-2961-376E-3717") (frameset--mini t . t) (modeline . t) (minibuffer . t) (unsplittable) (right-divider-width . 0) (bottom-divider-width . 0) (icon-name) (visibility . t) (display . "freedoms-MacBook-Air.local") (explicit-name) (tool-bar-position . top) (height . 60) (width . 97) (left . 5) (top . 23)) ((min-height . 8) (min-width . 10) (min-height-ignore . 8) (min-width-ignore . 10) (min-height-safe . 2) (min-width-safe . 2) (min-pixel-height . 112) (min-pixel-width . 70) (min-pixel-height-ignore . 112) (min-pixel-width-ignore . 70) (min-pixel-height-safe . 28) (min-pixel-width-safe . 14)) vc (pixel-width . 710) (pixel-height . 826) (total-width . 101) (total-height . 59) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 710) (pixel-height . 406) (total-width . 101) (total-height . 29) (normal-height . 0.5) (normal-width . 1.0) (buffer "reverse.ml" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 2) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 118) (start . 1))) (leaf (last . t) (pixel-width . 710) (pixel-height . 420) (total-width . 101) (total-height . 30) (normal-height . 0.5) (normal-width . 1.0) (buffer "*OCaml*" (selected) (hscroll . 0) (fringes 8 8 nil) (margins 3) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 14659) (start . 13934)))))])
(setq desktop-missing-file-warning nil)
(setq tags-file-name nil)
(setq tags-table-list nil)
(setq search-ring '("load" "tuareg" "*" "inser" "’¥Æ’¡¼’¥Þ" "theme" "tuareg" "test.mlR"))
(setq regexp-search-ring nil)
(setq register-alist (list (desktop-list* 51 (let ((mk (make-marker))) (add-hook 'desktop-delay-hook `(lambda nil (set-marker ,mk ,3850 (get-buffer ,"chapter1.tex")))) mk))))
(setq file-name-history '("~/OCaml/reverse.ml" "~/OCaml/test.ml" "~/OCaml/map.ml" "~/.emacs.d/init.el" "~/ocaml/test.ml" "~/Documents/4_zenki/’¥×’¥í’¥°’¥é’¥ß’¥ó’¥°B/kadai1/thesis.tex" "~/.bashrc"))
(setq kill-ring '("let rec reverse ls = rev ls []\nand rev ls r = match ls with\n    [] -> r\n  | h::t -> rev t (h::r)\n;;" "'(load \"'\"$HOME\"'/.opam/system/share/emacs/site-lisp/tuareg-site-file\")'" "(add-to-list 'auto-mode-alist '(\"\\\\.ml[iylp]?$\" . tuareg-mode))\n(autoload 'tuareg-mode \"tuareg\" \"Major mode for editing OCaml code.\" t)\n(autoload 'tuareg-run-ocaml \"tuareg\" \"Run an inferior OCaml process.\" t)\n(autoload 'ocamldebug \"ocamldebug\" \"Run the OCaml debugger.\" t)" "((eq (current-buffer) b) b)\n                     ((buffer-file-name b) b)\n                     ((char-equal ?\\  (aref (buffer-name b) 0)) nil)\n                     ((equal \"*scratch*\" (buffer-name b)) b) ; *scratch*’¥Ð’¥Ã’¥Õ’¥¡’¤Ï’É½’¼¨’¤¹’¤ë\n                     ((equal \"*OCaml\"*" "(argc%10000)>1) main(argc-1+(argv[argc%10000-1][0]-'0')*10000,argv);" " if((argc%10000)>1) main(argc-1+(argv[argc%10000-1][0]-'0')*10000,argv); \n else printf(\"%d\\n\",argc/10000); " " if((argc%10000)>1) main(argc-1+(argv[argc%10000-1][0]-'0')*10000,argv); \n else printf(\"%d\\n\",argc/10000); " "bash-4.4$ ./a.out 3 1 4\n8\nbash-4.4$ ./a.out 4 6 1\n11\nbash-4.4$ " "#include<stdio.h> \nint  main(int argc,char *argv[]){ \n if((argc%10000)>1) main(argc-1+(argv[argc%10000-1][0]-'0')*10000,argv); \n else printf(\"%d\\n\",argc/10000); \n return 0; \n}\n" "#include<stdio.h> \nint  main(int argc,char *argv[]){ \n if((argc%10000)>1) main(argc-1+(argv[argc%10000-1][0]-'0')*10000,argv); \n else printf(\"%d\\n\",argc/10000); \n return 0; \n}" "bash-4.4$ ./a.out\n0\n" "bash-4.4$ ./a.out 3 1 4\n0\n3\n4\n8\nbash-4.4$ " "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\n// using namespace std;\n\nint main(int argc, char *argv[]){\n  if(argc==0){\n    // printf(\"section 1 has begun\\n\");\n    return 0;\n  }else{\n    //char** p=argv;\n    // printf(\"section 2 has begun\\n\");\n    int x=atoi(argv[argc-1]);\n    // cout<<\"x: \"<<x<<endl;\n    // printf(\"section 3 has begun\\n\");\n    // printf(\"argc:%d\\n\",argc);\n    // cout<<\"argc: \"<<argc<<endl;\n    // return x+main(argc-1,argv);\n    int a=x+main(argc-1,argv);\n    printf(\"%d\\n\",a);\n    return a;\n  }\n}" " int flag=1;" "bash-4.4$ ./a.out 3 1 4\n0\n3\n1\n4" "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main(int argc, char *argv[]){\n  if(argc==0){\n    return 0;\n  }else{\n    int x=atoi(argv[argc-1]);\n    printf(\"%d\\n\",x+main(argc-1,argv));\n  }\n}" "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\n// using namespace std;\n\nint main(int argc, char *argv[]){\n  if(argc==0){\n    // printf(\"section 1 has begun\\n\");\n    return 0;\n  }else{\n    //char** p=argv;\n    // printf(\"section 2 has begun\\n\");\n    int x=atoi(argv[argc-1]);\n    // cout<<\"x: \"<<x<<endl;\n    // printf(\"section 3 has begun\\n\");\n    // printf(\"argc:%d\\n\",argc);\n    // cout<<\"argc: \"<<argc<<endl;\n    // return x+main(argc-1,argv);\n    printf(\"%d\\n\",x+main(argc-1,argv)); \n  }\n}" "x + main(argc-1,argv);" "    printf(\"section 1 has begun\\n\");" "2.71828182846" "let rec exp_dp x n c =\n  if n=0 then  0.\n  else x/.(float_of_int(c-n)) +. exp_dp (x/.(float_of_int(c-n))) (n-1) c;;\n\n\nlet rec exp n = exp_dp 1.0 n (n+1);;" "# let rec exp_dp x n c =\n  if n=0 then  0.\n  else x/.(float_of_int(c-n)) +. exp_dp (x/.(float_of_int(c-n))) (n-1) c\n\n\nlet rec exp n = exp_dp 1.0 n (n+1);;\n          val exp_dp : float -> int -> int -> float = <fun>\nval exp : int -> float = <fun>\n# exp 5\n  ;;\n  - : float = 1.71666666666666679\n# exp 7;;\n- : float = 1.71825396825396837\n# " "      \n(* let rec exp n =\n *   if n=1 then 1.0\n *   else rfact n + rfact n-1\n * \n *   \n * \n * let rec fib_dp a b n =\n *   if n=0 then 0\n *   else if  n=1 then b\n *   else fib_dp b (a+b) (n-1);;\n * \n * \n * let fib n = fib_dp 0 1 n;; *)\n" "x/.(float_of_int(N-n))" "(float_of_int n)" " let rec fib_dp a b n =\n   if n=0 then 0\n   else if  n=1 then b\n   else fib_dp b (a+b) (n-1);;\n\n\n let fib n = fib_dp 0 1 n;;\n" "let rec member a ls =\n    match ls with\n    | [] -> false\n    | h::t -> (a=h) || member a t;;\n\nlet rec unduplicate ls =\n  match ls with\n  | [] -> []\n  | h::t ->\n     if member h t then unduplicate t\n     else h::(unduplicate t);;\n" "# let rec member a ls =\n    match ls with\n    | [] -> false\n    | h::t -> (a=h) || member a t;;\n\nlet rec unduplicate ls =\n  match ls with\n  | [] -> []\n  | h::t ->\n     if member h t then unduplicate t\n     else h::(unduplicate t);;\n      val member : 'a -> 'a list -> bool = <fun>\n#             val unduplicate : 'a list -> 'a list = <fun>\n# unduplicate [1;4;6;1;6;6];;\n- : int list = [4; 1; 6]\n# unduplicate [2;2;2;3;5;5;7;8;9;9];;\n- : int list = [2; 3; 5; 7; 8; 9]\n# " "let rec member a ls =\n    match ls with\n    | [] -> false\n    | h::t -> (a=h) || member a t;;\n" "# let rec member a ls =\n    match ls with\n    | [] -> false\n    | h::t -> (a=h) || member a t;;\n\nlet rec difference a b =\n  match a with\n  | []->[]\n  | ha::ta ->\n     if member ha b then difference ta b\n     else ha::(difference ta b);;\n      val member : 'a -> 'a list -> bool = <fun>\n#             val difference : 'a list -> 'a list -> 'a list = <fun>\n# difference [1;3;5;7] [3;5;6;8;14]\n  ;;\n  - : int list = [1; 7]\n# difference [2;7;1;13] [6;7;2;5];;\n- : int list = [1; 13]" "let rec member a ls =\n    match ls with\n    | [] -> false\n    | h::t -> (a=h) || member a t;;\n\nlet rec difference a b =\n  match a with\n  | []->[]\n  | ha::ta ->\n     if member ha b then difference ta b\n     else ha::(difference ta b);;\n  " "let rec member a ls =\n    match ls with\n    | [] -> false\n    | h::t -> (a=h) || member a t;;\n" "# let rec member a ls =\n    match ls with\n    | [] -> false\n    | h::t -> (a=h) || member a t;;\n\nlet rec intersection a b =\n  match a with\n  | [] -> []\n  | ha::ta ->\n     if member ha b then ha::(intersection ta b)\n     else intersection ta b;;\n      val member : 'a -> 'a list -> bool = <fun>\n#             val intersection : 'a list -> 'a list -> 'a list = <fun>\n# intersection [1;3;6;10;14] [10;3;14;4];;\n- : int list = [3; 10; 14]\n# intersection [2;4;6] [6;8;10]\n;;\n  - : int list = [6]\n# " "let rec member a ls =\n    match ls with\n    | [] -> false\n    | h::t -> (a=h) || member a t;;\n\nlet rec intersection a b =\n  match a with\n  | [] -> []\n  | ha::ta ->\n     if member ha b then ha::(intersection ta b)\n     else intersection ta b;;\n" "let rec member a ls =\n    match ls with\n    | [] -> false\n    | h::t -> (a=h) || member a t;;\n" "let rec insertion a b = match (a,b) with" "# let rec fib_dp a b n =\n   if n=0 then 0\n   else if  n=1 then b\n   else fib_dp b (a+b) (n-1);;\n      val fib_dp : int -> int -> int -> int = <fun>\n# let fib n = fib_dp 0 1 n;;\nval fib : int -> int = <fun>\n# fib 4;;\n- : int = 3\n# fib 6;;\n- : int = 8" "\\begin{lstlisting}\n\n\\end{lstlisting}" "\\end{lstlisting}" "\\begin{lstlisting}" "# let rec fib_dp a b n =\n   if n=0 then 0\n   else if  n=1 then b\n   else fib_dp b (a+b) (n-1);;\n      val fib_dp : int -> int -> int -> int = <fun>\n# let fib n = fib_dp 0 1 n;;\nval fib : int -> int = <fun>\n# fib 4;;\n- : int = 3\n# fib 6;;\n- : int = 8\n# " " let rec fib_dp a b n = \n   if n=0 then 0\n   else if  n=1 then b\n   else fib_dp b (a+b) (n-1);;\n let fib n = fib_dp 0 1 n;; \n" " let rec fib_dp a b n = \n   if n=0 then 0\n   else if  n=1 then b\n   else fib_dp b (a+b) (n-1);;\n\n\n let fib n = fib_dp 0 1 n;;" " let rec fib_dp a b n =\n   if n=0 then 0\n   else if  n=1 then b\n   else fib_dp b (a+b) (n-1);;\n\n\n let fib n = fib_dp 0 1 n;;" " let rec fib_loop a b n = \n    if n=0 then b\n    else fib_loop b (a+b) (n-1);;\n\n  let fib n = fib_loop 1 0 n;;" "let distance x y = sqrt(x*.x +. y*.y);;" "# let rec union a b = match (a,b) with\n  | ([],b) -> b\n  | (a,[]) -> a\n  | (ha::ta,hb::tb) ->\n     if ha = hb\n     then union ta (hb::tb) \n     else \n       if (ha > hb) then union (ha::hb::ta) tb\n       else union ta (ha::hb::tb);;\n                val union : 'a list -> 'a list -> 'a list = <fun>\n# union [1;3;4;6] [1;3;8;16];;\n- : int list = [1; 3; 4; 6; 8; 16]\n# " "p" "let rec union a b = match (a,b) with\n  | ([],b) -> b\n  | (a,[]) -> a\n  | (ha::ta,hb::tb) ->\n     if ha = hb\n     then union ta hb::tb \n     else \n       if ha >hb then hb::(union ha tb)\n       else union ta ha::hb::tb;;" "let cm (x1,y1) (x2,y2) =\n    (x1*.x2-.y1*.y2, x1*.y2+x2*.y1)" "let tuple1=(1,\"one\");;" "let tuple1=(1,\"one\");;" "rlwrap ocaml" "#include<stdio.h>\n#include<stdlib.h>\n\n\nint main(int argc, char* argv[]){\n  int i=0;\n  if(argc==0){\n    return 0;\n  }else{\n    int sum=atoi(argv[i]) + main(argc-1, argv+1);\n    printf(\"%d\\n\",sum);\n  }\n}\n" "# let rec range m n =\n    if  m=n+1 then []\n    else [m]@(range (m+1) n);;\n  val range : int -> int -> int list = <fun>\n# range 3 6;;\n# - : int list = [3; 4; 5; 6]\n# " "let rec range m n =\n    if  m=n then []\n    else [m]::(range (m+1) n);;" "let rec range m n =\n    if  m=n then []\n    else (range (m+1) n)::m;;" "let rec range m n =\n    if  m=n then []\n    else (range (m+1) n)::m::[];;" "let rec range m n =\n    if  m=n then []\n    else (range (m+1) n)@m@[];;" "let rec range m n =\n    if  m=n then []\n    else (range m+1 n)@m@[];;"))
(setq kill-ring-yank-pointer (nthcdr 0 kill-ring))

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 208
  "/Users/freedom/OCaml/reverse.ml"
  "reverse.ml"
  'tuareg-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  118
  '(305 nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . utf-8-unix))
  '((mark-ring (1 228 295 176 128 302 67 67))))

(desktop-create-buffer 208
  "/Users/freedom/OCaml/calc.ml"
  "calc.ml"
  'tuareg-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  208
  '(81 nil)
  nil
  nil
  '((indent-tabs-mode))
  '((mark-ring (145 208 208))))

(desktop-create-buffer 208
  "/Users/freedom/OCaml/map.ml"
  "map.ml"
  'tuareg-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  47
  '(1 nil)
  nil
  nil
  '((indent-tabs-mode))
  '((mark-ring (47 47))))

(desktop-create-buffer 208
  "/Users/freedom/Documents/4_zenki/’¥×’¥í’¥°’¥é’¥ß’¥ó’¥°B/kadai1/Variant.ml"
  "Variant.ml"
  'tuareg-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  1
  '(1 nil)
  nil
  nil
  '((indent-tabs-mode))
  '((mark-ring nil)))

(desktop-create-buffer 208
  "/Users/freedom/Documents/4_zenki/’¥×’¥í’¥°’¥é’¥ß’¥ó’¥°B/kadai1/6_takehara.cpp"
  "6_takehara.cpp"
  'c++-mode
  '(abbrev-mode override-global-mode company-mode irony-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  127
  '(59 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix))
  '((mark-ring (162 131 177 1 176 176 177 177 177 177))))

(desktop-create-buffer 208
  "/Users/freedom/Documents/4_zenki/’¥×’¥í’¥°’¥é’¥ß’¥ó’¥°B/kadai1/6_2.cpp"
  "6_2.cpp"
  'c++-mode
  '(abbrev-mode override-global-mode company-mode irony-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  124
  '(124 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix))
  '((mark-ring (1 292 242 129 286 282 189 216 293 293 293 159 216 292 290 293))))

(desktop-create-buffer 208
  "/Users/freedom/Documents/4_zenki/’¥×’¥í’¥°’¥é’¥ß’¥ó’¥°B/kadai1/6.cpp"
  "6.cpp"
  'c++-mode
  '(abbrev-mode override-global-mode company-mode irony-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  548
  '(532 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix))
  '((mark-ring (233 572 592 512 531 436 396 500 329 132 593 259 216 193 466 548))))

(desktop-create-buffer 208
  "/Users/freedom/ocaml/exp.ml"
  "exp.ml"
  'tuareg-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  194
  '(407 nil)
  nil
  nil
  '((indent-tabs-mode))
  '((mark-ring (238 236 1 356 319 286 289 277 312 356 383 278 392 194))))

(desktop-create-buffer 208
  "/Users/freedom/ocaml/unduplicate.ml"
  "unduplicate.ml"
  'tuareg-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  151
  '(232 nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . utf-8-unix))
  '((mark-ring (1 136 141 149))))

(desktop-create-buffer 208
  "/Users/freedom/ocaml/difference.ml"
  "difference.ml"
  'tuareg-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  95
  '(1 nil)
  nil
  nil
  '((indent-tabs-mode))
  '((mark-ring (238 1 178 120))))

(desktop-create-buffer 208
  nil
  "ocaml"
  'dired-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode yas-minor-mode)
  1252
  '(129 nil)
  t
  '("/Users/freedom/ocaml/")
  nil
  '((mark-ring nil)))

(desktop-create-buffer 208
  "/Users/freedom/ocaml/intersection.ml"
  "intersection.ml"
  'tuareg-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  95
  '(1 nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . utf-8-unix))
  '((mark-ring (244 1 213 137 213 95 106 182 164 213))))

(desktop-create-buffer 208
  "/Users/freedom/Documents/4_zenki/’¥×’¥í’¥°’¥é’¥ß’¥ó’¥°B/kadai1/chapter1.tex"
  "chapter1.tex"
  'yatex-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode outline-minor-mode)
  402
  '(3756 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (fill-column . 72))
  '((mark-ring (3543 2962 3154 2172 2439 1637 1365 809 529 83 225 205 475 186 40 3838))))

(desktop-create-buffer 208
  "/Users/freedom/Documents/4_zenki/’¥×’¥í’¥°’¥é’¥ß’¥ó’¥°B/kadai1/thesis.tex"
  "thesis.tex"
  'yatex-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode outline-minor-mode)
  272
  '(1737 t)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (fill-column . 72))
  '((mark-ring (1737 272))))

(desktop-create-buffer 208
  "/Users/freedom/ocaml/fib.ml"
  "fib.ml"
  'tuareg-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  300
  '(175 nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . utf-8-unix))
  '((mark-ring (176 272 299 299 66 65 173 253 253 215 299 299 271 271 299 299))))

(desktop-create-buffer 208
  "/Users/freedom/ocaml/union.ml"
  "union.ml"
  'tuareg-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  95
  '(1 nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . utf-8-unix))
  '((mark-ring (333 314 544 550 545 243 76 96 239 241 95 144 145 75 302 22))))

(desktop-create-buffer 208
  "/Users/freedom/ocaml/tuple.ml"
  "tuple.ml"
  'tuareg-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  87
  '(25 nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . utf-8-unix))
  '((mark-ring (23 1 83 83 85))))

(desktop-create-buffer 208
  "/Users/freedom/OCaml/test.ml"
  "test.ml"
  'tuareg-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  153
  '(137 nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . utf-8-unix))
  '((mark-ring (1 108 108 85 108 124 160 160))))

(desktop-create-buffer 208
  "/Users/freedom/ocaml/proB6.cpp"
  "proB6.cpp"
  'c++-mode
  '(abbrev-mode override-global-mode company-mode irony-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  172
  '(203 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix))
  '((mark-ring (202 184 173 172 161 84 172 147 187 122 200 113))))

(desktop-create-buffer 208
  nil
  "freedom"
  'dired-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode yas-minor-mode)
  23020
  '(262 nil)
  t
  '("/Users/freedom/")
  nil
  '((mark-ring nil)))

(desktop-create-buffer 208
  "/Users/freedom/ocaml/four_times.ml"
  "four_times.ml"
  'tuareg-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  62
  '(62 nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . undecided-unix))
  '((mark-ring (19 62))))

(desktop-create-buffer 208
  "/Users/freedom/ocaml/fact.ml"
  "fact.ml"
  'tuareg-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  77
  '(84 nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . utf-8-unix))
  '((mark-ring (74 73 51 51 51 77))))

(desktop-create-buffer 208
  "/Users/freedom/ocaml/distance.ml"
  "distance.ml"
  'tuareg-mode
  '(override-global-mode company-mode helm-mode linum-mode global-whitespace-mode undo-tree-mode yas-minor-mode)
  40
  '(40 t)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . utf-8-unix))
  '((mark-ring (40 1 5))))

